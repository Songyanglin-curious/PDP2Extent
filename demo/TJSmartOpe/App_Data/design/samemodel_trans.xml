<?xml version="1.0" encoding="utf-8"?>
<root maxid="11" desc="空白页">
	<inits>
		<init id="init1" desc="设备id" type="request" arg="deviceid"></init>
		<init id="init9" desc="厂家" type="request" arg="facname"></init>
		<init id="init10" desc="型号" type="request" arg="model"></init>
		<init id="area0" desc="地区后缀" type="request" arg="areasuffix"></init>
		<init id="init_starttime" desc="开始时间" type="request" arg="starttime"></init>
		<init id="init_endtime" desc="结束时间" type="request" arg="endtime"></init>
		<init id="swi" desc="切换" type="request" arg="swidw"></init>
	</inits>
	<consts>
		<const id="const11" desc="语句" arg="" type="string"></const>
		<const id="const1" desc="变量" type="string"></const>
		<const id="const2" desc="变量" type="string"></const>
		<const id="const3" desc="变量" type="string"></const>
		<const id="argtype" type="string" arg=""></const>
		<const id="argmodel" type="string" arg=""></const>
		<const id="argfac" type="string" arg=""></const>
		<const id="argtitle" type="string" arg=""></const>
		<const id="argtitle1" type="string" arg=""></const>
		<const id="dsDevList" desc="设备列表循环数据"></const>
	</consts>
	<datasources>
		<datasource id="ds0" desc="设备列表" db="ConnMain" type="xml" node="sc/device_archives:GetSameModelTrans">

			<cols>
				<col id="argcolid" name="colid" from="init1"></col>
				<col id="col0" desc="id" name="id"></col>
				<col id="col1" desc="型号" name="model"></col>
			</cols>
		</datasource>
	</datasources>
	<ctrls>
		<div id="div0" desc="根容器">
			<a s_width="100%"></a>
			<c>
				<div>
					<a s_display="flex" s_align-items="center" s_justify-content="center" s_margin-bottom="20px"></a>
					<label>
						<a class="linearGradient"></a>
						<sa value="argtitle1"></sa>
					</label>
				</div>
				<div id="div3" desc="容器">
					<a s_font-size="14px" s_padding-bottom="10px"></a>
					<c>
						<label id="label8" desc="文字">
							<a s_color="#fff"></a>
							<sa value="argtitle"></sa>
						</label>
					</c>
				</div>
				<div>
					<a class="fsac" s_flex-wrap="wrap"></a>
					<c>
						<loop id="loop4" desc="循环显示" from="dsDevList">
							<c>
								<div  style="width:100%">
									<div style="padding: 10px 0;color: #fff;">
										<label>
											<sa value="item_loop4[0]"></sa>
										</label>
									</div>
									<div style="    display: flex;flex-wrap: wrap;">
										<loop id="loop5" desc="循环显示" from="item_loop4[1]">
											<div style="height:50px;display: flex;align-items: center;justify-content: center;margin-right:10px">
												<c>
													<href>
														<label>
															<a s_color="#85D8E0"></a>
															<sa value="item_loop5[1]"></sa>
															<e>
																<onclick args="item_loop5">
																	<list type="script" value="this.jumpDev(item_loop5)"></list>
																</onclick>
															</e>
														</label>
													</href>
												</c>
											</div>
										</loop>
									</div>
								</div>
							</c>
						</loop>
					</c>
				</div>
			</c>
		</div>
	</ctrls>
	<scripts>
		<script event="created">
			<list type="select" ds="ds0"></list>
			<list type="script">
				<value>
					<![CDATA[
			//this.select_ds1();
			var vm=this;

			this.mergeData = function(data){
				var groups = Ysh.Array.groupBy(vm.ds0,[2],false);
				var lst = [];
				for (var i = 0; i < groups.length; i++) {
					var g = groups[i];
					var arr = [];
					var strLength = g.name[0].length
					g.data.forEach(item => {
						item[1] = item[1].slice(strLength)
					})
					lst.push([g.name[0], g.data]);
				}
				return lst
			}
			vm.dsDevList = vm.mergeData();

			var o = PDP.read('ConnMain', "sgc/c:GetDeviceInfoById", [vm.init1],function(data){
				if(data.check('获取设备', true))
				{
				vm.argtype=data.value[0][0];
				vm.argmodel=data.value[0][1];
				vm.argfac=data.value[0][2];
				
				vm.argtitle="使用"+vm.argfac+"有"+vm.argmodel+"型号的其他"+vm.argtype+"有：";
					vm.argtitle1="同型号其他"+vm.argtype+"分布";
				}
			});
              
		  
      this.const11 = "使用"+this.init9+"   "+this.init10+"型号的其它主变有：";
		  
		  //快速定位与联动
		  switch(this.swi){
			case  "basic":
				this.const1="none";
				this.const2="none";
				this.const3="同型号其他变压器分布";
				break;
			case  "qx":
				this.const1="";
				this.const2="none";
				this.const3="同型号其他变压器缺陷信息";
				this.select_ds1();
				break;
		  }
		  this.jumpDev = function(href_item){
			var vMain = ProjectSGC.Global.getMainObject("vMain")
			vMain.gotoApp("devicearchives",{ id: href_item[0], argtype: 'ahealth' })
		  }
          ]]>
				</value>
			</list>
		</script>
		<script event="mounted">
			<list type="script">
				<value>
					<![CDATA[
          ]]>
				</value>
			</list>
		</script>
	</scripts>
</root>