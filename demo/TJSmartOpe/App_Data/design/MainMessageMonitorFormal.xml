<?xml version="1.0" encoding="utf-8"?>
<root>
  <maxid>10</maxid>
  <inits remark="输入参数">
    <init id="init0" desc="厂站id" type="request" arg="sid" remark="request参数"></init>
    <init id="pmid" desc="任务卡管理页面点击的mid" type="request" arg="pmid" remark="request参数"></init>
  </inits>
  <consts remark="固定常量">
    <const id="w0" desc="左侧div宽度" arg="0" type="number"></const>
    <const id="w1" desc="右侧div宽度" arg="0" type="number"></const>
    <const id="w3" desc="左下div宽度" arg="100%" type="string"></const>
    <const id="h0" desc="左侧div高度" arg="0" type="number"></const>
    <const id="h00" desc="" arg="0" type="number"></const>
    <const id="h1" desc="右侧div高度" arg="0" type="number"></const>
    <const id="h3" desc="左下div高度" arg="0" type="number"></const>
    <const id="d0" desc="左侧显示与否" arg="" type="string"></const>
    <const id="d1" desc="右侧显示与否" arg="" type="string"></const>
    <const id="d2" desc="左上显示与否" arg="" type="string"></const>
    <const id="d3" desc="左下显示与否" arg="" type="string"></const>
    <const id="i1" desc="右侧图片地址" arg="/i/show/amplification.png" type="string"></const>
    <const id="i3" desc="右上图片地址" arg="/i/show/amplification.png" type="string"></const>
    <const id="w9" desc="全屏div宽度" arg="0" type="number"></const>
    <const id="w10" desc="左侧div宽度" arg="0" type="number"></const>
    <const id="w11" desc="右侧div宽度" arg="0" type="number"></const>
    <const id="c0" desc="遥信按钮样式" arg="ivu-btn ivu-btn-primary" type="string"></const>
    <const id="c1" desc="遥测按钮样式" arg="ivu-btn" type="string"></const>
    <const id="c2" desc="遥控按钮样式" arg="ivu-btn" type="string"></const>
    <const id="c3" desc="告警直传按钮样式" arg="ivu-btn" type="string"></const>
    <const id="c4" desc="SOE事项按钮样式" arg="ivu-btn ivu-btn-primary" type="string"></const>
    <const id="c5" desc="实时报文按钮样式" arg="ivu-btn" type="string"></const>
    <const id="c6" desc="通信通道按钮样式" arg="ivu-btn" type="string"></const>
    <const id="c7" desc="主站图形" arg="ivu-btn" type="string"></const>
    <const id="c8" desc="动态信号" arg="ivu-btn" type="string"></const>
    <const id="c_Auto" desc="自动按钮样式" arg="ivu-btn" type="string"></const>
    <const id="cUnfinish" desc="未完成按钮样式" arg="ivu-btn" type="string"></const>
    <const id="cConfirm" desc="已确认按钮样式" arg="ivu-btn" type="string"></const>
    <const id="n0" desc="信号总数" arg="0" type="string"></const>
    <const id="n1" desc="主站一数量" arg="---" type="string"></const>
    <const id="n2" desc="主站二数量" arg="---" type="string"></const>
    <const id="n3" desc="主站三数量" arg="---" type="string"></const>
    <const id="n4" desc="主站四数量" arg="---" type="string"></const>
    <const id="s_YX" desc="显示遥信表" arg="" type="string"></const>
    <const id="s_YC" desc="显示遥测表" arg="none" type="string"></const>
    <const id="s_YC_2" desc="显示遥测(有功/无功)表" arg="none" type="string"></const>
    <const id="s_SOE" desc="显示SOE" arg="" type="string"></const>
    <const id="stationInfo" desc="所选变电站信息" arg="" type="string"></const>
    <const id="pointId" desc="所选点号" arg="" type="string"></const>
    <const id="m_leftYx" desc="遥信浮动框margin-left" arg="0" type="number"></const>
    <const id="top" desc="表格距顶高度" arg="0" type="number"></const>
    <const id="floatDivHYx" desc="遥信浮动框高度" arg="104" type="number"></const>
    <const id="select_index" desc="所选变电站index" arg="-1" type="number"></const>
    <const id="conds_desc" desc="描述" arg="####" type="string"></const>
    <const id="conds_temp" desc="描述(临时)" arg="" type="string"></const>
    <const id="conds_pid" desc="" arg="-1" type="number"></const>
    <const id="conds_temp_pid" desc="" arg="-1" type="number"></const>
    <const id="operTypeL" desc="当前类型" arg="YX" type="string"></const>
    <const id="operTypeR" desc="当前类型" arg="YX" type="string"></const>
    <const id="count" desc="刷新数据数量" arg="0" type="number"></const>
    <const id="pos" desc="刷新数据位置" arg="0" type="number"></const>
    <const id="operSignal" desc="操作信号类型" arg="none" type="string"></const>
    <const id="strChannel" desc="所操作主站号" arg="none" type="string"></const>
    <const id="strRemark" desc="备注" arg="" type="string"></const>
    <const id="lstCond" type="2d" length="2" arg="0,全部,1,未调试,2,未通过,3,已通过"></const>
    <const id="strStatus" desc="信号状态" arg="ALL" type="string"></const>
    <const id="s_desc" desc="" arg="true" type="bool"></const>
    <const id="s_space" desc="" arg="false" type="bool"></const>
    <const id="conds_space" desc="" arg="####" type="string"></const>
    <const id="selectType" desc="" arg="间隔" type="string"></const>
    <const id="selectPid" desc="筛选soe的pid" arg="-1" type="string"></const>
    <const id="strSysMsg" desc="" arg="" type="string"></const>
    <const id="operUser" desc="" arg="" type="string"></const>
    <const id="LoginUser" desc="" arg="" type="string"></const>
    <const id="sel_space_class" desc="" arg="ivu-select-selection" type="string"></const>
    <const id="showModal_YX" desc="" arg="false" type="bool"></const>
    <const id="showModal_warning" desc="" arg="false" type="bool"></const>
    <const id="warning_msg" desc="" arg="" type="string"></const>
    <const id="showAcceptance" arg="false" type="bool"></const>
    <const id="r_priority" desc="" arg="按点号排序" type="string"></const>
    <const id="t_priority" desc="" arg="自动确认" type="string"></const>
    <const id="ifm" desc="" arg="" type="string"></const>
    <const id="url" desc="" arg="" type="string"></const>
    <const id="showModal_link" desc="" arg="false" type="bool"></const>
    <const id="graph_iframe_url" desc="" arg="" type="string"></const>
    <const id="dynSig_iframe_url" desc="" arg="" type="string"></const>
    <const id="cfmTimeSpan" desc="" arg="-1" type="number"></const>
    <const id="taskId" desc="" arg="-1" type="number"></const>
    <const id="mid" desc="" arg="-1" type="number"></const>
    <const id="show_xhcjgl" arg="false" type="bool"></const>
    <const id="ifm_xxcjgl" desc="" arg="" type="string"></const>
    <const id="sysType" desc="" arg="" type="string"></const>
    <const id="open3000mainip" desc="2M专线通道_open3000" arg="172.30.1.1,172.30.1.2,172.30.1.3,172.30.1.4,10.71.0.1,10.71.0.2,10.71.0.3,10.71.0.4,10.225.63.14,10.225.63.15,10.225.63.16,10.225.63.17" type="string[]"></const>
    <const id="d5000mainip" desc="2M专线通道_d5000" arg="172.30.1.5,172.30.1.6,172.30.1.7,172.30.1.8,10.71.0.8,10.71.0.9,10.71.0.10,10.71.0.11,10.225.63.30,10.225.63.31,10.225.63.32,10.225.63.33" type="string[]"></const>
    <const id="strAngle" desc="" arg="" type="string"></const>
    <const id="showTaskplan" desc="" arg="false" type="bool"></const>
    <const id="sel_startpid" desc="" arg="" type=""></const>
    <const id="sel_endpid" desc="" arg="" type=""></const>
    <const id="pid_count" desc="" arg="" type=""></const>
    <const id="ds_pid" desc="" arg="" type=""></const>
    <const id="curPage" desc="" arg="" type=""></const>
    <const id="nextPage" desc="" arg="" type=""></const>
    <const id="pageSize" desc="" arg="100" type=""></const>
    <const id="updateId" desc="" arg="-1" type=""></const>
    <const id="showModal_YC" desc="" arg="false" type="bool"></const>
    <const id="FOCUS_ON_YC_INPUT" desc="" arg="false" type="bool"></const>
    <const id="taskBtnShow" desc="" arg="true" type="bool"></const>
    <const id="objMerge" desc="" arg="" type=""></const>
    <const id="isFirst" desc="" arg="true" type="bool"></const>
    <const id="isOpenYc" desc="" arg="false" type="bool"></const>
    <const id="chooseYc"></const>
    <const id="tbname" desc="表名字" arg="tbtelesig1"></const>
    <const id="staname" desc="站名字"></const>
    <const id="statisticsInfo" desc="完成情况统计"></const>
    <const id="needPoints" desc="需要的点号数据"></const>
    <const id="cbtn" desc="当前所点击按钮" type="string"></const>
    <const id="isZong" desc="是否综自" type="string"></const>
  </consts>
  <datasources remark="数据库数据源">
    <datasource id="ds_YX" desc="遥信表" db="ConnMain" type="simple">
      <sql>
        <![CDATA[select a.pid,sys,sigContent,channel,a.opst,current,rtime,ctime,finish,atime AS Atime,`desc`,a.sid,a.`user`,mergeName,case polarity when 0 then '' when 1 then '是' end polarity from (
SELECT Sig.pid,'open3000' as sys,sigContent,channel,Sig.opst,current,rtime,ctime,finish,atime AS Atime,`desc`,Sig.sid,Sig.`user`,'' as mergeName,yx.polarity as polarity FROM tbTeleSig1 AS Sig 
      LEFT JOIN tbyxpointcomplete AS Yx ON Yx.pid=Sig.pid AND Sig.sid=Yx.sid AND Sig.mid=Yx.mid 
      LEFT join (select * from open3000.fes_yx_define where fac_id=(select fac_id from open3000.fac_info where FAC_NAME like '%{{5}}%' limit 1)) yx on yx.dot_no=Sig.pid
			WHERE Sig.mid={4} AND channel =1 and Sig.system ='open3000'
      AND ({1}='####' OR sigContent LIKE '%{1}%') AND ({2}='ALL' OR (IFNULL(finish,'3')={2} OR finish={2})) 
      AND ({3}='####' OR spaceName IN ({3}))
union
SELECT Sig.pid,'d5000' as sys,Yx.sigContent,channel,Sig.opst,current,rtime,ctime,finish,atime AS Atime,`desc`,Sig.sid,Sig.`user`, 
Yx2.sigContent as mergeName,yx3.polarity as polarity FROM tbTeleSig1 AS Sig 
      LEFT JOIN tbyxpointcomplete_d5000 AS Yx ON Yx.pid=Sig.pid AND Sig.sid=Yx.sid AND Sig.mid=Yx.mid 
			LEFT JOIN tbyxpointcomplete_d5000 AS Yx2 ON Yx2.pid=Yx.mergeid AND Yx2.sid=Yx.sid AND Yx2.mid=Yx.mid
      LEFT join (select * from d5000.fes_yx_define where st_id=(select ID from d5000.substation where NAME like '%{{5}}%' LIMIT 1)) yx3 on yx3.dot_no=yx.pid
			WHERE Sig.mid={4} AND channel =1 and Sig.system ='d5000'
      AND ({1}='####' OR Yx.sigContent LIKE '%{1}%') AND ({2}='ALL' OR (IFNULL(finish,'3')={2} OR finish={2})) 
      AND ({3}='####' OR Yx.spaceName IN ({3}))
) a order by pid asc,sys desc; 
]]>
      </sql>
      <cols>
        <col id="ds_YX_sid" desc="厂站id" name="sid" from="init0"></col>
        <col id="ds_YX_conds_desc" desc="描述" name="conds_desc" from="conds_desc"></col>
        <col id="ds_YX_strStatus" desc="状态" name="strStatus" from="strStatus"></col>
        <col id="ds_YX_conds_space" desc="间隔" name="conds_space" from="conds_space"></col>
        <col id="ds_YX_mid" desc="任务卡id" name="mid" from="mid"></col>
        <col id="ds_YX_staname" desc="站名" name="staname" from="staname"></col>
        <col id="ds_YX_pid" desc="点号" name="pid"></col>
        <col id="ds_YX_sys" desc="系统" name="sys"></col>
        <col id="ds_YX_sigContent" desc="" name="sigContent"></col>
        <col id="ds_YX_channel" desc="通道" name="channel"></col>
        <col id="ds_YX_opst" desc="通道" name="opst"></col>
        <col id="ds_YX_current" desc="当前" name="current"></col>
        <col id="ds_YX_rtime" desc="收到" name="rtime"></col>
        <col id="ds_YX_ctime" desc="SOE时间" name="ctime"></col>
        <col id="ds_YX_finish" desc="完成" name="finish"></col>
        <col id="ds_YX_atime" desc="确认" name="Atime"></col>
        <col id="ds_YX_desc" desc="原因/备注" name="desc"></col>
        <col id="ds_YX_sSid" desc="" name="sid"></col>
        <col id="ds_YX_user" desc="" name="user"></col>
        <col id="ds_YX_mergeName" desc="" name="mergeName"></col>
        <col id="ds_YX_polarity" desc="" name="polarity"></col>
      </cols>
    </datasource>
    <datasource id="ds_YX_content" desc="遥信信号内容" db="ConnMain" type="simple">
      <sql>
        <![CDATA[select pid,sigContent,spaceName,sys from(
SELECT pid,'open3000' as sys,sigContent,spaceName FROM tbyxpointcomplete WHERE mid={0}
union
SELECT pid,'d5000' as sys,sigContent,spaceName FROM tbyxpointcomplete_d5000 WHERE mid={0}
) a order by pid asc,sys desc; ]]>
      </sql>
      <cols>
        <col id="ds_YX_content_sid" desc="厂站id" name="sid" from="mid"></col>
        <col id="ds_YX_content_pid" desc="" name="pid"></col>
        <col id="ds_YX_content_sigContent" desc="" name="sigContent"></col>
        <col id="ds_YX_content_spaceName" desc="" name=""></col>
      </cols>
    </datasource>
    <datasource id="ds_SL_count" desc="数据量" db="ConnMain" type="simple">
      <sql>
        <![CDATA[
          select CONCAT(min(c2),'/',max(c1)-min(c2),'/',max(c1)) from (
            SELECT count(1) c1,count(atime) c2 FROM {{1}} WHERE mid = {{0}} group by system
          ) a; 
        ]]>
      </sql>
      <cols>
        <col from="mid"></col>
        <col from="tbname"></col>
        <col id="ds_count_info" desc="" name="count"></col>
      </cols>
    </datasource>
    <datasource id="ds_SoE" desc="SoE报文表" db="ConnMain" type="simple">
      <sql>
        <![CDATA[SELECT pid,pi,IFNULL(time, '无时标') AS time FROM tbSoElog AS SOE WHERE SOE.sid={0} ORDER BY SOE.id DESC LIMIT 200; ]]>
      </sql>
      <cols>
        <col id="ds_SoE_sid" desc="厂站id" name="sid" from="init0"></col>
        <col id="ds_SoE_pid" desc="点号" name="pid"></col>
        <col id="ds_SoE_pi" desc="状态" name="pi"></col>
        <col id="ds_SoE_time" desc="SOE时间" name="time"></col>
      </cols>
    </datasource>
    <datasource id="ds_channel" desc="主站数量" db="ConnMain" type="simple">
      <sql>
        <![CDATA[ SELECT distinct 1 FROM tbCnlCfg WHERE sid={0} AND enabled=1 AND cid=1
        UNION ALL SELECT distinct 2 FROM tbCnlCfg WHERE sid={0} AND enabled=1 AND cid=2
        UNION ALL SELECT distinct 3 FROM tbCnlCfg WHERE sid={0} AND enabled=1 AND cid=3
        UNION ALL SELECT distinct 4 FROM tbCnlCfg WHERE sid={0} AND enabled=1 AND cid=4; ]]>
      </sql>
      <cols>
        <col id="ds_channel_sid" desc="厂站id" name="sid" from="init0"></col>
      </cols>
    </datasource>
    <datasource id="ds_spaceYX" desc="间隔信息" db="ConnMain" type="simple">
      <sql>
        <![CDATA[ select '####' AS spaceName1,'全部' AS spaceName2 union all 
        select distinct spaceName,spaceName from tbyxpointcomplete where ifnull(spaceName,1)!=1 and mid={0}; ]]>
      </sql>
      <cols>
        <col id="ds_spaceYX_mid" desc="id" name="mid" from="mid"></col>
      </cols>
    </datasource>
    <datasource id="ds_info" desc="基本信息" db="ConnMain" type="simple">
      <sql>
        <![CDATA[select vol,sub.name,m.missionName,date_format(autoacceptTime,'%Y年%m月%d日') as autoacceptTime,
			  date_format(planStartTime,'%Y年%m月%d日') as planStartTime,autoacceptTime from tbsubdesc sub
            left join tbmission m on sub.id = m.sid
            where m.id = {0}  ]]>
      </sql>
      <cols>
        <col id="ds_info_sid" desc="任务卡id" name="mid" from="mid"></col>
      </cols>
    </datasource>
    <datasource id="ds_acceptanceState" desc="任务卡" db="ConnMain" type="simple">
      <sql>
        <![CDATA[
                select miId,acceptanceUser,acceptTime from v_mission where id={0}; ]]>
      </sql>
      <cols>
        <col id="ds_acc_mid" desc="" name="mid" from="mid"></col>
        <col id="ds_acc_miId" desc="miId" name="miId" ></col>
        <col id="ds_acc_user" desc="user" name="user" ></col>
        <col id="ds_acc_accepttime" desc="accepttime" name="accepttime" ></col>
      </cols>
    </datasource>
    <datasource id="ds_checkstate" desc="验收情况" db="ConnMain" type="simple">
      <sql>
        <![CDATA[
                select sum(count) as count from (
                    select count(*) as count from tbTeleSig1 where mid = {0} and (finish is null or finish=0) and channel = 1
                    union all
                    select count(*) as count from tbtelemeter1 where mid = {0} and (finish is null or finish=0) and channel = 1
                )a;
                ]]>
      </sql>
      <cols>
        <col id="ds_state_mid" desc="" name="mid" from="mid"></col>
        <col id="ds_state_count" desc="id" name="count" ></col>
      </cols>
    </datasource>
    <datasource id="ds_yxResult" desc="遥信验收情况" db="ConnMain" type="simple">
      <sql>
        <![CDATA[
        select a.pid,sys,finish,atime AS Atime,wyid from (
        SELECT Sig.pid,'open3000' as sys,finish,atime AS Atime,wyid FROM tbTeleSig1 AS Sig 
        LEFT JOIN tbyxpointcomplete AS Yx ON Yx.pid=Sig.pid AND Sig.sid=Yx.sid AND Sig.mid=Yx.mid WHERE Sig.mid={0} AND channel =1 
			and Sig.system ='open3000'
        union
        SELECT Sig.pid,'d5000' as sys,finish,atime AS Atime,wyid FROM tbTeleSig1 AS Sig 
        LEFT JOIN tbyxpointcomplete_d5000 AS Yx ON Yx.pid=Sig.pid AND Sig.sid=Yx.sid AND Sig.mid=Yx.mid WHERE Sig.mid={0} AND channel =1 
			and Sig.system ='d5000'
        ) a order by pid asc,sys desc;
			]]>
      </sql>
      <cols>
        <col id="ds_yxResult_mid" desc="" name="mid" from="mid"></col>
      </cols>
    </datasource>
    <datasource id="ds_Result" desc="遥信验收情况" db="ConnMain" type="simple">
      <sql>
        <![CDATA[select v.miId,v.missionName, username, telnumber,
            case when v.autoacceptTime is null then '否' else '是' end as hdResult,
            case v.isAVC 
            when 0 then case checkState when 3 then '是' else '否' end
            when 1 then case AVCcheckState when 3 then '是' else '否' end
            end as jhResult,now() as acceptTime,processInstanceId from acceptanceinfo.v_mission v 
			left join appusertest.dbuser u on v.usernum=u.usernum where v.id={0}
            ORDER BY v.createTime desc;
	    ]]>
      </sql>
      <cols>
        <col id="ds_Result_mid" desc="" name="mid" from="mid"></col>
      </cols>
    </datasource>
    <datasource id="ds_pidList" desc="点号下拉框数据源" db="ConnMain" type="simple">
      <sql>
        <![CDATA[select a.pid,a.pid from (
SELECT Sig.pid FROM tbTeleSig1 AS Sig 
    LEFT JOIN tbyxpointcomplete AS Yx ON Yx.pid=Sig.pid AND Sig.sid=Yx.sid AND Sig.mid=Yx.mid WHERE Sig.mid={0} AND channel =1 and Sig.system ='open3000'
union
SELECT Sig.pid FROM tbTeleSig1 AS Sig 
    LEFT JOIN tbyxpointcomplete_d5000 AS Yx ON Yx.pid=Sig.pid AND Sig.sid=Yx.sid AND Sig.mid=Yx.mid WHERE Sig.mid={0} AND channel =1 and Sig.system ='d5000'
) a order by pid; ]]>
      </sql>
      <cols>
        <col id="ds_pidList_mid" desc="任务卡id" name="mid" from="mid"></col>
        <col id="ds_pidList_pid1" desc="" name="pid1"></col>
        <col id="ds_pidList_pid2" desc="" name="pid2"></col>
      </cols>
    </datasource>
    <datasource id="ds_pidCount" desc="点号数量" db="ConnMain" type="simple">
      <sql>
        <![CDATA[select max(count) from (
SELECT count(*) as count FROM tbTeleSig1 AS Sig 
LEFT JOIN tbyxpointcomplete AS Yx ON Yx.pid=Sig.pid AND Sig.sid=Yx.sid AND Sig.mid=Yx.mid WHERE Sig.mid={0} AND channel =1 and Sig.system ='open3000'
and Yx.pid between {1} and {2}
union
SELECT count(*) as count FROM tbTeleSig1 AS Sig 
LEFT JOIN tbyxpointcomplete_d5000 AS Yx ON Yx.pid=Sig.pid AND Sig.sid=Yx.sid AND Sig.mid=Yx.mid WHERE Sig.mid={0} AND channel =1 and Sig.system ='d5000' 
and Yx.pid between {1} and {2}
) a; ]]>
      </sql>
      <cols>
        <col id="ds_pidCount_mid" desc="" name="mid" from="mid"></col>
        <col id="ds_pidCount_spid" desc="" name="startpid" from="sel_startpid"></col>
        <col id="ds_pidCount_epid" desc="" name="endpid" from="sel_endpid"></col>
      </cols>
    </datasource>
    <datasource id="ds_taskplan" desc="任务计划表数据源" db="ConnMain" type="simple">
      <sql>
        <![CDATA[
                select id,startpid, endpid, count,name,state from acceptanceinfo.tbtaskplan where mid={0} order by startpid; 
				]]>
      </sql>
      <cols>
        <col id="ds_taskplan_mid" desc="" name="mid" from="mid"></col>
        <col id="ds_taskplan_id" desc="" name="id"></col>
        <col id="ds_taskplan_spid" desc="" name="startpid"></col>
        <col id="ds_taskplan_epid" desc="" name="endpid" ></col>
        <col id="ds_taskplan_count" desc="" name="count" ></col>
        <col id="ds_taskplan_name" desc="" name="name" ></col>
        <col id="ds_taskplan_state" desc="" name="state" ></col>
      </cols>
    </datasource>
    <datasource id="ds_YC" desc="遥测表" db="ConnMain" type="simple">
      <sql>
        <![CDATA[set @i = -1;select a.pid,sys,a.opst,channel,current,rtime,value,finish,Atime,`desc`,a.sid,user,a.coefficient,a.fullCode, concat(precisions,'%') as ycprecision,sigContent,baseValue,(@i:=@i+1) as rowindex,chan_name,chan_name,co from (
SELECT Sig.pid,'open3000' as sys,Sig.opst,channel,current,rtime,round(Sig.value, 3) AS value,finish,atime AS Atime,`desc`,Sig.sid,Sig.`user` AS user,oyc.factor1 as coefficient,oyc.factor3 as fullCode,Yc.sigContent,oyc.base as baseValue,precisions,ifnull(ci.chan_name,'无') chan_name,ifnull(m.co,1) co FROM tbTeleMeter1 AS Sig 
    LEFT JOIN tbycpointcomplete AS Yc ON Sig.pid=Yc.pid AND Sig.sid=Yc.sid AND Sig.mid=Yc.mid 
    LEFT join (select * from open3000.fes_yc_define where fac_id=(select fac_id from open3000.fac_info where FAC_NAME like '%{{5}}%' limit 1)) oyc on oyc.dot_no=Sig.pid 
    left join open3000.channel_info ci on oyc.chan_id1=ci.chan_id 
    left join (select dot_no, count(1) as co from open3000.fes_yc_define oyc
		left join open3000.channel_info ci on oyc.chan_id1=ci.chan_id where oyc.fac_id=(select fac_id from open3000.fac_info where FAC_NAME like '%{{5}}%' limit 1)
		group by dot_no)  m on sig.pid = m.dot_no 
    WHERE Sig.mid={4} AND channel =1 and Sig.system ='open3000' 
	and sigContent not like '%功率因%' and sigContent not like '%COS%' and sigContent not like '%cos%'
    AND ({1}='####' OR sigContent LIKE '%{1}%') AND ({2}='ALL' OR (IFNULL(finish,'3')={2} OR finish={2})) 
    AND ({3}='####' OR spaceName IN ({3})) 
union
SELECT Sig.pid,'d5000' as sys,Sig.opst,channel,current,rtime,round(Sig.value, 3) AS value,finish,atime AS Atime,`desc`,Sig.sid,Sig.`user` AS user,oyc.factor1 as coefficient,oyc.factor3 as fullCode,Yc.sigContent,oyc.base as baseValue,precisions,ifnull(ci.chan_name,'无') chan_name,ifnull(m.co,1) co FROM tbTeleMeter1 AS Sig 
    LEFT JOIN tbycpointcomplete_d5000 AS Yc ON Sig.pid=Yc.pid AND Sig.sid=Yc.sid AND Sig.mid=Yc.mid 
    LEFT join (select * from d5000.fes_yc_define where st_id=(select ID from d5000.substation where NAME like '%{{5}}%' limit 1)) oyc on oyc.dot_no=Sig.pid 
    left join d5000.channel_info ci on oyc.chan_id1=ci.id 
    left join (select dot_no, count(1) as co from d5000.fes_yc_define oyc
		left join d5000.channel_info ci on oyc.chan_id1=ci.id where oyc.st_id=(select ID from d5000.substation where NAME like '%{{5}}%' limit 1)
		group by dot_no)  m on sig.pid = m.dot_no 
    WHERE Sig.mid={4} AND channel =1 and Sig.system ='d5000' 
	and sigContent not like '%功率因%' and sigContent not like '%COS%' and sigContent not like '%cos%'
    AND ({1}='####' OR sigContent LIKE '%{1}%') AND ({2}='ALL' OR (IFNULL(finish,'3')={2} OR finish={2})) 
    AND ({3}='####' OR spaceName IN ({3}))
)a where ((co > 1 and chan_name {{6}} '%综自%') or co = 1)  order by pid asc,sys desc; ]]>
      </sql>
      <cols>
        <col id="ds_YC_sid" desc="厂站id" name="sid" from="init0"></col>
        <col id="ds_YC_conds_desc" desc="描述" name="conds_desc" from="conds_desc"></col>
        <col id="ds_YC_strStatus" desc="状态" name="strStatus" from="strStatus"></col>
        <col id="ds_YC_conds_space" desc="间隔" name="conds_space" from="conds_space"></col>
        <col id="ds_YC_mid" desc="任务卡id" name="mid" from="mid"></col>
        <col desc="站名" from="staname"></col>
        <col desc="是否综自" from="isZong"></col>
        <col id="ds_YC_pid" desc="点号" name="pid"></col>
        <col id="ds_YC_sys" desc="系统" name="sys"></col>
        <col id="ds_YC_opst" desc="反" name="opst"></col>
        <col id="ds_YC_channel" desc="通道" name="channel"></col>
        <col id="ds_YC_current" desc="当前" name="current"></col>
        <col id="ds_YC_rtime" desc="收到" name="rtime"></col>
        <col id="ds_YC_value" desc="当前值" name="value"></col>
        <col id="ds_YC_finish" desc="完成" name="finish"></col>
        <col id="ds_YC_atime" desc="确认" name="Atime"></col>
        <col id="ds_YC_desc" desc="原因/备注" name="desc"></col>
        <col id="ds_YC_sSid" desc="" name="sid"></col>
        <col id="ds_YC_user" desc="" name="user"></col>
        <col id="ds_YC_coefficient" desc="" name="coefficient"></col>
        <col id="ds_YC_fullCode" desc="" name="fullCode"></col>
        <col id="ds_YC_ycprecision" desc="" name="ycprecision"></col>
        <col id="ds_YC_sigContent" desc="" name="sigContent"></col>
        <col id="ds_YC_baseValue" desc="" name="baseValue"></col>
        <col id="ds_YC_index" desc="" name="rowindex"></col>
        <col id="ds_YC_channame" desc="" name="channame"></col>
      </cols>
    </datasource>
    <datasource id="ds_YC_PQ" desc="遥测表(有功/无功)" db="ConnMain" type="simple">
      <sql>
        <![CDATA[select a.pid,sys,sigContent,a.opst,channel,current,rtime,value,finish,Atime,remark,a.sid,user,PQ,
    COSSet,coefficient,fullCode, concat(precisions,'%') as ycprecision,baseValue,chan_name,co  from(
SELECT Sig.pid,'open3000' as sys,sigContent,Sig.opst,channel,current,rtime,an.cos AS value,an.finish,an.atime AS Atime,remark,Sig.sid,an.`user` AS user,angle as PQ,COSSet,oyc.factor1 as coefficient,oyc.factor3 as fullCode,an.precisions,oyc.base as baseValue,ifnull(ci.chan_name,'无') chan_name,ifnull(m.co,1) co  FROM tbTeleMeter1 AS Sig 
    LEFT JOIN tbycpointcomplete AS Yc ON Sig.pid=Yc.pid AND Sig.sid=Yc.sid AND Sig.mid=Yc.mid 
			left join tbtelemeter_angle1 as an on Sig.sid = an.sid and Sig.pid = an.pid and Sig.mid = an.mid and Sig.system = an.system
      LEFT join (select * from open3000.fes_yc_define where fac_id=(select fac_id from open3000.fac_info where FAC_NAME like '%{{5}}%' limit 1)) oyc on oyc.dot_no=Sig.pid
			left join open3000.channel_info ci on oyc.chan_id1=ci.chan_id 
      left join (select dot_no, count(1) as co from open3000.fes_yc_define oyc
		  left join open3000.channel_info ci on oyc.chan_id1=ci.chan_id where oyc.fac_id=(select fac_id from open3000.fac_info where FAC_NAME like '%{{5}}%' limit 1)
		  group by dot_no)  m on sig.pid = m.dot_no 
      WHERE Sig.mid={4} AND channel =1 and Sig.system ='open3000' 
	    and (sigContent like '%功率因%' or sigContent like '%COS%' or sigContent like '%cos%')
      AND ({1}='####' OR sigContent LIKE '%{1}%') AND ({2}='ALL' OR (IFNULL(an.finish,'3')={2} OR an.finish={2})) 
      AND ({3}='####' OR spaceName IN ({3}))
union 
SELECT Sig.pid,'d5000' as sys,sigContent,Sig.opst,channel,current,rtime,an.cos AS value,an.finish,an.atime AS Atime,remark,Sig.sid,an.`user` AS user,angle as PQ,COSSet,oyc.factor1 as coefficient,oyc.factor3 as fullCode,an.precisions,oyc.base as baseValue,ifnull(ci.chan_name,'无') chan_name,ifnull(m.co,1) co  FROM tbTeleMeter1 AS Sig 
    LEFT JOIN tbycpointcomplete_d5000 AS Yc ON Sig.pid=Yc.pid AND Sig.sid=Yc.sid AND Sig.mid=Yc.mid 
			left join tbtelemeter_angle1 as an on Sig.sid = an.sid and Sig.pid = an.pid and Sig.mid = an.mid and Sig.system = an.system
      LEFT join (select * from d5000.fes_yc_define where st_id=(select ID from d5000.substation where NAME like '%{{5}}%' limit 1)) oyc on oyc.dot_no=Sig.pid 
      left join d5000.channel_info ci on oyc.chan_id1=ci.id 
      left join (select dot_no, count(1) as co from d5000.fes_yc_define oyc
		  left join d5000.channel_info ci on oyc.chan_id1=ci.id where oyc.st_id=(select ID from d5000.substation where NAME like '%{{5}}%' limit 1)
		  group by dot_no)  m on sig.pid = m.dot_no 
      WHERE Sig.mid={4} AND channel =1 and Sig.system ='d5000' 
	    and (sigContent like '%功率因%' or sigContent like '%COS%'  or sigContent like '%cos%')
      AND ({1}='####' OR sigContent LIKE '%{1}%') AND ({2}='ALL' OR (IFNULL(an.finish,'3')={2} OR an.finish={2})) 
      AND ({3}='####' OR spaceName IN ({3}))
) a where ((co > 1 and chan_name like '%综自%') or co = 1) order by pid asc,FIELD(`PQ`, '0°', '45°', '90°', '135°', '225°', '-45°'),sys desc;   ]]>
      </sql>
      <cols>
        <col id="ds_YC_PQ_sid" desc="厂站id" name="sid" from="init0"></col>
        <col id="ds_YC_PQ_conds_desc" desc="描述" name="conds_desc" from="conds_desc"></col>
        <col id="ds_YC_PQ_strStatus" desc="状态" name="strStatus" from="strStatus"></col>
        <col id="ds_YC_PQ_conds_space" desc="间隔" name="conds_space" from="conds_space"></col>
        <col id="ds_YC_PQ_mid" desc="任务卡id" name="mid" from="mid"></col>
        <col desc="站名" from="staname"></col>
        <col desc="是否综自" from="isZong"></col>
        <col id="ds_YC_PQ_pid" desc="点号" name="pid"></col>
        <col id="ds_YC_PQ_sys" desc="点号" name="sys"></col>
        <col id="ds_YC_PQ_sigContent" desc="信号内容" name="sigContent"></col>
        <col id="ds_YC_PQ_opst" desc="反" name="opst"></col>
        <col id="ds_YC_PQ_channel" desc="通道" name="channel"></col>
        <col id="ds_YC_PQ_current" desc="当前" name="current"></col>
        <col id="ds_YC_PQ_rtime" desc="收到" name="rtime"></col>
        <col id="ds_YC_PQ_value" desc="当前值" name="value"></col>
        <col id="ds_YC_PQ_finish" desc="完成" name="finish"></col>
        <col id="ds_YC_PQ_atime" desc="确认" name="Atime"></col>
        <col id="ds_YC_PQ_desc" desc="原因/备注" name="desc"></col>
        <col id="ds_YC_PQ_sSid" desc="" name="sid"></col>
        <col id="ds_YC_PQ_user" desc="" name="user"></col>
        <col id="ds_YC_PQ_PQ" desc="" name="PQ"></col>
        <col id="ds_YC_PQ_COSSet" desc="" name="COSSet"></col>
        <col id="ds_YC_PQ_coefficient" desc="" name="coefficient"></col>
        <col id="ds_YC_PQ_fullCode" desc="" name="fullCode"></col>
        <col id="ds_YC_PQ_ycprecision" desc="" name="ycprecision"></col>
        <col id="ds_YC_PQ_baseValue" desc="" name="baseValue"></col>
      </cols>
    </datasource>
    <datasource id="ds_spaceYX" desc="间隔信息" db="ConnMain" type="simple">
      <sql>
        <![CDATA[ select '####' AS spaceName1,'全部' AS spaceName2 union all 
    select distinct spaceName,spaceName from tbyxpointcomplete where ifnull(spaceName,1)!=1 and mid={0}; ]]>
      </sql>
      <cols>
        <col id="ds_spaceYX_mid" desc="id" name="mid" from="mid"></col>
      </cols>
    </datasource>
    <datasource id="ds_spaceYC" desc="间隔信息" db="ConnMain" type="simple">
      <sql>
        <![CDATA[ select '####' AS spaceName1,'全部' AS spaceName2 union all 
    select distinct spaceName,spaceName from tbycpointcomplete where ifnull(spaceName,1)!=1 and mid={0}; ]]>
      </sql>
      <cols>
        <col id="ds_spaceYC_mid" desc="id" name="mid" from="mid"></col>
      </cols>
    </datasource>
    <datasource id="ds_User" desc="验收人" db="ConnMain" type="simple">
      <sql>
        <![CDATA[  SELECT user FROM (
              SELECT user FROM tbtelesigconfirm WHERE sid={0}  and mid={1} and user is not null
              UNION ALL
              SELECT user FROM tbtelemeterconfirm WHERE sid={0} and mid={1} and user is not null) as a
              GROUP BY user;]]>
      </sql>
      <cols>
        <col id="ds_User_sid" desc="厂站id" name="sid" from="init0"></col>
        <col id="ds_User_mid" desc="任务卡id" name="mid" from="mid"></col>
      </cols>
    </datasource>
  </datasources>
  <dll remark="外部调用dll">
    <dll id="dll_GetSignalByPid" desc="获得信号内容" dllid="Acceptance:Acceptance.AcceptanceLib.GetSignalByPid">
      <inputs>
        <input id="arg0" desc="operTypeL" from="operTypeL"></input>
        <input id="arg1" desc="sid" from="init0"></input>
        <input id="arg2" desc="pointId" from="pointId"></input>
      </inputs>
      <outputs>
        <output id="stationInfo" desc="信号内容"></output>
      </outputs>
    </dll>
    <dll id="dll_SetTestSigStatus" desc="设置信号状态" dllid="Acceptance:Acceptance.AcceptanceLib.SetTestSigStatus">
      <inputs>
        <input id="arg0" desc="operTypeL" from="operTypeL"></input>
        <input id="arg1" desc="sid" from="init0"></input>
        <input id="arg2" desc="pointId" from="pointId"></input>
        <input id="arg5" desc="strChannel" from="strChannel"></input>
        <input id="arg4" desc="operSignal" from="operSignal"></input>
        <input id="arg5" desc="operUser" from="operUser"></input>
        <input id="arg6" desc="mid" from="mid"></input>
        <input id="arg7" desc="sysType" from="sysType"></input>
        <input id="arg8" desc="strAngle" from="strAngle"></input>
      </inputs>
      <outputs>
        <output id="operTime" desc="操作时间"></output>
      </outputs>
    </dll>
    <dll id="dll_SetTestSigRemark" desc="设置信号备注" dllid="Acceptance:Acceptance.AcceptanceLib.SetTestSigRemark">
      <inputs>
        <input id="arg0" desc="operTypeL" from="operTypeL"></input>
        <input id="arg1" desc="sid" from="init0"></input>
        <input id="arg2" desc="pointId" from="pointId"></input>
        <input id="arg3" desc="strChannel" from="strChannel"></input>
        <input id="arg4" desc="strRemark" from="strRemark"></input>
        <input id="arg5" desc="sysType" from="sysType"></input>
        <input id="arg6" desc="mid" from="mid"></input>
        <input id="arg7" desc="strAngle" from="strAngle"></input>
      </inputs>
    </dll>
  </dll>
  <ctrls desc="模拟主站">
    <div id="div0" desc="根容器">
      <s>
        <width>100%</width>
        <overflow>hidden</overflow>
      </s>
      <ss height="h00+'px'"></ss>
      <c>
        <div id="divLeft">
          <s>
            <float>left</float>
            <background>#fff</background>
          </s>
          <ss>
            <width>w0+'px'</width>
            <height>h0+'px'</height>
            <display>d0</display>
          </ss>
          <c>
            <imodal id="imodal_YX" desc="" from="showModal_YX">
              <a>
                <width>450px</width>
              </a>
              <sa mask-closable="false">
                <footer-hide>true</footer-hide>
              </sa>
              <c>
                <div>
                  <s>
                    <height>40px</height>
                    <width>100%</width>
                  </s>
                  <c>
                    <div>
                      <s>
                        <font-size>15px</font-size>
                        <float>left</float>
                        <width>400px</width>
                      </s>
                      <c>
                        <html>
                          <sa html="pointId"></sa>
                        </html>
                        <html>
                          <sa html="stationInfo"></sa>
                        </html>
                      </c>
                    </div>
                  </c>
                </div>
                <div>
                  <s>
                    <height>80px</height>
                    <width>100%</width>
                    <background-color>#fff</background-color>
                  </s>
                  <c>
                    <iinput id="iinput_ReasonYx" desc="原因/备注">
                      <a>
                        <ref>iinput_ReasonYx</ref>
                        <placeholder>原因/备注</placeholder>
                      </a>
                      <s>
                        <margin-left>5px</margin-left>
                        <width>400px</width>
                        <margin-top>15px</margin-top>
                      </s>
                      <e>
                        <e event="on-blur" arguments="">
                          <list type="script">
                            <value>
                              <![CDATA[
                              if (this.strRemark !== this.$refs.iinput_ReasonYx.currentValue) {
                                  this.strRemark = this.$refs.iinput_ReasonYx.currentValue;
                                  this.pointId = this.pointId.substring(2,this.pointId.length-1);
                                  this.invoke_dll_SetTestSigRemark();
                                  this.$refs.iTeleSig.currData[this.select_index].desc = this.strRemark;
                                  var data = this.$refs.iTeleSig.currData[this.select_index];
                                  var iPos = this.getIndexByPidChannel(Number(data.pid), data.sys, this.$refs.iTeleSig.data);
                                  if (-1 === iPos)
                                      return;
                                  this.$refs.iTeleSig.data[iPos].desc = this.strRemark;
                                  this.pointId = "点号" + this.pointId + "：";
                                  this.ScrolltableResize("LEFT");
                              }
                            ]]>
                            </value>
                          </list>
                        </e>
                      </e>
                    </iinput>
                  </c>
                </div>
              </c>
            </imodal>
            <imodal id="imodal_YC" desc="" from="showModal_YC">
              <a>
                <width>450px</width>
              </a>
              <sa mask-closable="false">
                <footer-hide>true</footer-hide>
              </sa>
              <c>
                <div>
                  <s>
                    <height>40px</height>
                    <width>100%</width>
                  </s>
                  <c>
                    <div>
                      <s>
                        <font-size>15px</font-size>
                        <float>left</float>
                        <width>490px</width>
                      </s>
                      <c>
                        <html>
                          <sa html="pointId"></sa>
                        </html>
                        <html>
                          <sa html="stationInfo"></sa>
                        </html>
                      </c>
                    </div>
                  </c>
                </div>
                <div>
                  <s>
                    <height>80px</height>
                    <width>100%</width>
                    <background-color>#fff</background-color>
                  </s>
                  <c>
                    <iinput id="iinput_ReasonYc" desc="原因/备注">
                      <a>
                        <ref>iinput_ReasonYc</ref>
                        <placeholder>原因/备注</placeholder>
                      </a>
                      <s>
                        <margin-left>5px</margin-left>
                        <width>400px</width>
                        <margin-top>15px</margin-top>
                      </s>
                      <e>
                        <e event="on-blur" arguments="">
                          <list type="script">
                            <value>
                              <![CDATA[
                                                  if (this.strRemark !== this.$refs.iinput_ReasonYc.currentValue) {
                                                      this.strRemark = this.$refs.iinput_ReasonYc.currentValue;
                                                      this.pointId = this.pointId.substring(2,this.pointId.length-1);
                                                      this.invoke_dll_SetTestSigRemark();
							                       if(pdp.operTypeL == "YC_2"){
							                          this.$refs.iTeleMeterAngle.currData[this.select_index].desc = this.strRemark;
                                                          var data = this.$refs.iTeleMeterAngle.currData[this.select_index];
                                                          var iPos = this.getIndexByPidChannel(Number(data.pid), data.sys, this.$refs.iTeleMeterAngle.data);
                                                          if (-1 === iPos)
                                                              return;
							                          this.$refs.iTeleMeterAngle.data[iPos].desc = this.strRemark;
							                       }
							                       else{
							                          this.$refs.iTeleMeter.currData[this.select_index].desc = this.strRemark;
                                                          var data = this.$refs.iTeleMeter.currData[this.select_index];
                                                          var iPos = this.getIndexByPidChannel(Number(data.pid), data.sys, this.$refs.iTeleMeter.data);
                                                          if (-1 === iPos)
                                                              return;
							                           this.$refs.iTeleMeter.data[iPos].desc = this.strRemark;
							                       }
                                                      this.pointId = "点号" + this.pointId + "：";
                                                      this.ScrolltableResize("LEFT");
                                                  }
                                                ]]>
                            </value>
                          </list>
                        </e>
                      </e>
                    </iinput>
                    <button id="btn_ctrl">
                      <a>
                        <value>
                          <![CDATA[手动控制]]>
                        </value>
                        <class>
                          <![CDATA[ivu-btn]]>
                        </class>
                      </a>
                      <s>
                        <display>none</display>
                        <height>30px</height>
                        <margin-left>30px</margin-left>
                        <margin-top>15px</margin-top>
                      </s>
                      <e>
                        <onclick  type="script">
                          <list>
                            <value>
                              <![CDATA[]]>
                            </value>
                          </list>
                        </onclick>
                      </e>
                    </button>
                    <button id="btn_diagnose_YC">
                      <a>
                        <value>
                          <![CDATA[报文诊断]]>
                        </value>
                        <class>
                          <![CDATA[ivu-btn]]>
                        </class>
                      </a>
                      <s>
                        <display>none</display>
                        <height>30px</height>
                        <margin-left>20px</margin-left>
                        <margin-top>15px</margin-top>
                      </s>
                      <e>
                        <onclick  type="script">
                          <list>
                            <value>
                              <![CDATA[
                              this.ifm = this.url;
                              this.ifm = this.ifm.replace('类型', 'YC');
                              this.ifm = this.ifm.replace('点号', this.params.row.pid);
                              this.ifm = this.ifm.replace('间隔', this.params.row.spaceName);
                              this.showModal_link = true;
                              ]]>
                            </value>
                          </list>
                        </onclick>
                      </e>
                    </button>
                  </c>
                </div>
              </c>
            </imodal>
            <imodal id="imodal_warning" desc="" from="showModal_warning">
              <a>
                <width>300px</width>
              </a>
              <sa mask-closable="false">
                <footer-hide>true</footer-hide>
              </sa>
              <c>
                <label>
                  <s>
                    <display>block</display>
                    <margin-top>12px</margin-top>
                    <font-size>20px</font-size>
                    <color>red</color>
                  </s>
                  <sa>
                    <value>warning_msg</value>
                  </sa>
                </label>
              </c>
            </imodal>
            <imodal id="imodal_link" desc="" from="showModal_link">
              <a>
                <width>1800px</width>
                <title>诊断</title>
              </a>
              <sa mask-closable="false">
                <footer-hide>true</footer-hide>
              </sa>
              <e>
                <e event="on-cancel" arguments="">
                  <list type="script">
                    <value>
                      <![CDATA[ this.ifm = ""; ]]>
                    </value>
                  </list>
                </e>
              </e>
              <c>
                <iframe>
                  <a>
                    <frameborder>0</frameborder>
                    <scrolling>no</scrolling>
                  </a>
                  <s>
                    <border>0px</border>
                    <width>100%</width>
                    <height>700px</height>
                  </s>
                  <sa>
                    <src>ifm</src>
                  </sa>
                </iframe>
              </c>
            </imodal>
            <div id="divSignal">
              <s>
                <background>#fff</background>
              </s>
              <ss>
                <width>w3+'px'</width>
                <height>h3+'px'</height>
                <display>d3</display>
              </ss>
              <c>
                <div>
                  <s>
                    <height>50px</height>
                    <width>100%</width>
                  </s>
                  <c>
                    <button id="btn_YX">
                      <a>
                        <value>
                          <![CDATA[遥信]]>
                        </value>
                      </a>
                      <sa class="c0"></sa>
                      <s>
                        <margin-top>10px</margin-top>
                        <margin-left>15px</margin-left>
                        <margin-right>10px</margin-right>
                      </s>
                      <e>
                        <onclick>
                          <list type="script">
                            <value>
                              <![CDATA[
                              this.cbtn = "YX";
									if(!this.isFirst){
                                        this.beforeCloseYC();
									}
									else {
									    this.isFirst = false;
										this.SwitchLPage(this.s_YX, "YX_2");
									}
                  this.statisticsInfo = PDP.read('ConnMain','SignalData:GetYxStatisticsInfo',[this.mid]).value;
                                    ]]>
                            </value>
                          </list>
                        </onclick>
                      </e>
                    </button>
                    <button id="btn_YC">
                      <a>
                        <value>
                          <![CDATA[遥测(45°)]]>
                        </value>
                      </a>
                      <sa class="c1"></sa>
                      <s>
                        <margin-right>10px</margin-right>
                        <margin-top>10px</margin-top>
                      </s>
                      <e>
                        <onclick>
                          <list type="script">
                            <value>
                              <![CDATA[
                                this.cbtn = "YC";
                                this.SwitchLPage(this.s_YC, "YC");
                                this.statisticsInfo = PDP.read('ConnMain','SignalData:GetYcStatisticsInfo',[this.mid]).value;
                              ]]>
                            </value>
                          </list>
                        </onclick>
                      </e>
                    </button>
                    <button id="btn_YC_2">
                      <a>
                        <value>
                          <![CDATA[遥测(角度转换)]]>
                        </value>
                      </a>
                      <sa class="c2"></sa>
                      <s>
                        <margin-right>10px</margin-right>
                        <margin-top>10px</margin-top>
                      </s>
                      <e>
                        <onclick>
                          <list type="script">
                            <value>
                              <![CDATA[
                                this.cbtn = "YC2";
                                this.SwitchLPage(this.s_YC_2, "YC_2");
                                this.statisticsInfo = PDP.read('ConnMain','SignalData:GetYc2StatisticsInfo',[this.mid]).value;
                              ]]>
                            </value>
                          </list>
                        </onclick>
                      </e>
                    </button>
                    <button id="btn_Report">
                      <a>
                        <value>
                          <![CDATA[验收完成]]>
                        </value>
                        <class>ivu-btn</class>
                      </a>
                      <s>
                        <height>32px</height>
                        <margin-top>10px</margin-top>
                        <margin-right>10px</margin-right>
                        <margin-left>30px</margin-left>
                        <float>right</float>
                      </s>
                      <e>
                        <onclick>
                          <list type="script">
                            <value>
                              <![CDATA[
                                if(this.CheckAcceptanceState()) {
                                  this.$Modal.info({
                                    content: "信号未全部验收完成!"
                                  });
                                  return
                                };
                                var dll = PDP.dll('Acceptance:Acceptance.AcceptanceLib.UpdateMisState', [this.mid, "AUTO"]);
                                if(!dll.check('更新验收状态', true))
                                  return;
                                this.select_ds_info();
                                //变电站电压等级+任务卡名称+厂站核对报告+生成报告时间
                                var fileName = this.ds_info[0][0] + this.ds_info[0][2] + '厂站核对报告-' + this.formatTime(this.ds_info[0][5], 1);
                                var dtNow = new Date();
                                var fileRename = "CheckReport" + dtNow.getFullYear() + dtNow.getMonth() + dtNow.getDate() + dtNow.getHours() + dtNow.getMinutes() + dtNow.getSeconds();
                                //, [this.init0, this.strSpaceYC, this.strPidYCs, this.strPidYCb]
                                var dll = PDP.dll('Acceptance:Acceptance.ExportPdfSig.DoExport', [this.init0, this.mid, fileName, fileRename, [this.init0, '#', '#', '#', this.ds_acc_user[0], '#', '#', this.mid, '',this.staname,this.isZong],
                                  [this.init0, '#', '#', '#', this.ds_acc_user[0], '#', '#', this.mid, '',this.staname,this.isZong], "AUTO"
                                ]);
                                if(!dll.check('导出PDF文件', true))
                                  return;
                                fileRename += "a.pdf";
                                fileName += ".pdf";
                                //保存pdf到数据库
                                var arrdata = [];
                                arrdata.push(this.init0);
                                arrdata.push(this.mid);
                                arrdata.push(fileRename);
                                arrdata.push(fileName);
                                arrdata.push(3);

                                dll = PDP.dll('Acceptance:Acceptance.AcceptanceLib.SaveReportPdf', [arrdata]);
                                if(!dll.check('保存PDF文件', true))
                                  return;
                                if(dll.value[0] == "true") {
                                  this.$Modal.success({
                                    title: '验收完成，已生成验收报告!'
                                  });
                                  setTimeout(function() {
                                    //发送验收结果
                                    this.sendCheckResult();
                                  }.bind(this), 500);

                                } else {
                                  this.$Modal.error({
                                    title: '生成验收报告失败!'
                                  });
                                }
                              ]]>
                            </value>
                          </list>
                        </onclick>
                      </e>
                    </button>
                    <button id="btn_Taskplan">
                      <a v-show="taskBtnShow">
                        <value>
                          <![CDATA[创建任务计划]]>
                        </value>
                        <class>ivu-btn</class>
                      </a>
                      <s>
                        <height>32px</height>
                        <margin-top>10px</margin-top>
                        <margin-right>10px</margin-right>
                        <margin-left>30px</margin-left>
                        <float>right</float>
                      </s>
                      <e>
                        <onclick>
                          <list type="script">
                            <value>
                              <![CDATA[
                                if(this.ds_pidList.length<200) {
                                    this.$Modal.info({
                                      content: "当前任务卡点号数量低于200，不允许创建任务计划！"
                                  });
                                  return;
                                }
                                this.caculatelistPid();
                                this.showTaskplan = true;
                                this.$refs.itaskTable.resize();
                              ]]>
                            </value>
                          </list>
                        </onclick>
                      </e>
                    </button>
                    <button id="btn_StartYc">
                      <a v-show="!taskBtnShow">
                        <value>
                          <![CDATA[开始遥测验收]]>
                        </value>
                        <class>ivu-btn</class>
                      </a>
                      <s>
                        <height>32px</height>
                        <margin-top>10px</margin-top>
                        <margin-right>10px</margin-right>
                        <margin-left>30px</margin-left>
                        <float>right</float>
                      </s>
                      <e>
                        <onclick>
                          <list type="script">
                            <value>
                              <![CDATA[ 
                                this.dealYcNp();
                                this.CheckAuto("YC");
                                this.$Modal.info({
                                  content: "遥测验收已开始！"
                                });
                                this.isOpenYc = true;
                              ]]>
                            </value>
                          </list>
                        </onclick>
                      </e>
                    </button>
                    <iradiogroup id="iradiogroup_priority" from="r_priority">
                      <a ref="iradiogroup_priority"></a>
                      <s>
                        <float>right</float>
                        <margin-top>13px</margin-top>
                      </s>
                      <e>
                        <e event="on-change" arguments="">
                          <list type="script">
                            <value>
                              <![CDATA[
                              let tp = '按点号排序' === this.r_priority ? 'PID' : 'TIME';
                              this.SetPriority_YX(tp);
                              ]]>
                            </value>
                          </list>
                        </e>
                      </e>
                      <c>
                        <iradio id="iradio_pid">
                          <a label="按点号排序"></a>
                        </iradio>
                        <iradio id="iradio_time">
                          <a label="按时间排序"></a>
                        </iradio>
                      </c>
                    </iradiogroup>
                    <iinput id="iinput_search_desc" desc="搜索描述">
                      <a>
                        <ref>iinput_search_desc</ref>
                        <placeholder>描述</placeholder>
                        <type>text</type>
                        <icon>ios-search</icon>
                      </a>
                      <sa>
                        <disabled>s_desc</disabled>
                      </sa>
                      <s>
                        <width>200px</width>
                        <float>right</float>
                        <margin-top>10px</margin-top>
                        <margin-right>10px</margin-right>
                      </s>
                      <e>
                        <e event="on-click" arguments="">
                          <list type="script">
                            <value>
                              <![CDATA[
                              if (0 != this.conds_temp_desc.length) {
                                  this.$refs.iinput_search_desc.currentValue = this.conds_temp_desc;
                                  this.conds_temp_desc = "";
                                  this.conds_temp_pid = -1;
                                  this.iinput_search_desc_on_enter();
                              }
                              ]]>
                            </value>
                          </list>
                        </e>
                        <e event="on-enter" arguments="event">
                          <list type="script">
                            <value>
                              <![CDATA[
                              if (0 != this.$refs.iinput_search_desc.currentValue.length) {
                                  this.$refs.iinput_search_pid.currentValue = "";
                                  this.conds_pid = -1;
                                  this.conds_desc = this.$refs.iinput_search_desc.currentValue;
                                  this.Reload();
                              }
                              ]]>
                            </value>
                          </list>
                        </e>
                        <e event="on-change" arguments="event">
                          <list type="script">
                            <value>
                              <![CDATA[
                              if (0 != this.$refs.iinput_search_desc.currentValue.length) 
                                  return;
                              this.conds_desc = "####";
                              this.Reload();
                              ]]>
                            </value>
                          </list>
                        </e>
                        <e event="on-blur" arguments="event">
                          <list type="script">
                            <value>
                              <![CDATA[ this.SearchInit(); ]]>
                            </value>
                          </list>
                        </e>
                      </e>
                    </iinput>
                    <button id="btn_switch_1">
                      <sa class="s_desc ? 'ivu-btn' : 'ivu-btn ivu-btn-primary'"></sa>
                      <a>
                        <value>
                          <![CDATA[描述]]>
                        </value>
                      </a>
                      <s>
                        <margin-top>10px</margin-top>
                        <margin-right>2px</margin-right>
                        <margin-left>10px</margin-left>
                        <float>right</float>
                      </s>
                      <e>
                        <onclick>
                          <list type="script">
                            <value>
                              <![CDATA[ 
                              if("描述" === this.selectType) 
                                  return;
                              this.selectType = '描述';
                              this.sel_space_class = "ysh-select-disabled";
                              this.s_space = true;
                              this.s_desc = false;
                              this.conds_desc = '####';
                              this.conds_space = '####';
                              this.$refs.isel_space.values.splice(0, this.$refs.isel_space.values.length);
                              this.$refs.iinput_search_pid.currentValue = this.$refs.iinput_search_desc.currentValue = '';
                              this.Reload();
                              ]]>
                            </value>
                          </list>
                        </onclick>
                      </e>
                    </button>
                    <iselect id="isel_space" desc="间隔" source="ds_space">
                      <a ref="isel_space"></a>
                      <sa>
                        <multiple>true</multiple>
                        <class>sel_space_class</class>
                        <disabled>s_space</disabled>
                      </sa>
                      <s>
                        <width>200px</width>
                        <float>right</float>
                        <margin-top>10px</margin-top>
                        <margin-right>10px</margin-right>
                        <height>32px</height>
                        <font-size>14px</font-size>
                      </s>
                      <e>
                        <e event="on-open-change" arguments="event">
                          <list type="script">
                            <value>
                              <![CDATA[
                              if (!arguments[0]) {
                                  this.conds_space = this.$refs.isel_space.value.length == 0 ? "####" : this.$refs.isel_space.value.join(",");
                                  this.Reload();
                              }
                              ]]>
                            </value>
                          </list>
                        </e>
                      </e>
                    </iselect>
                    <button id="btn_switch_2">
                      <sa class="s_space ? 'ivu-btn' : 'ivu-btn ivu-btn-primary'"></sa>
                      <a>
                        <value>
                          <![CDATA[间隔]]>
                        </value>
                      </a>
                      <s>
                        <margin-top>10px</margin-top>
                        <margin-right>2px</margin-right>
                        <float>right</float>
                      </s>
                      <e>
                        <onclick>
                          <list type="script">
                            <value>
                              <![CDATA[ 
                              if("间隔" === this.selectType) 
                                  return;
                              this.selectType = '间隔';
                              this.sel_space_class = "ivu-select-selection";
                              this.s_space = false;
                              this.s_desc = true;
                              this.sel_space = '';
                              this.conds_desc = '####';
                              this.conds_space = '####';
                              this.$refs.iinput_search_pid.currentValue = this.$refs.iinput_search_desc.currentValue = this.sel_space = '';
                              this.Reload();
                              ]]>
                            </value>
                          </list>
                        </onclick>
                      </e>
                    </button>
                    <iinput id="iinput_search_pid" desc="搜索点号">
                      <a>
                        <ref>iinput_search_pid</ref>
                        <placeholder>点号</placeholder>
                        <type>text</type>
                        <icon>ios-search</icon>
                      </a>
                      <s>
                        <width>200px</width>
                        <float>right</float>
                        <margin-top>10px</margin-top>
                        <margin-right>10px</margin-right>
                      </s>
                      <e>
                        <e event="on-click" arguments="">
                          <list type="script">
                            <value>
                              <![CDATA[
                                      if (-1 != this.conds_temp_pid) {
                                          this.$refs.iinput_search_pid.currentValue = this.conds_temp_pid;
                                          this.conds_temp_desc = "";
                                          this.conds_temp_pid = -1;
                                          this.PidSearch();
                                      }
                                      ]]>
                            </value>
                          </list>
                        </e>
                        <e event="on-enter" arguments="event">
                          <list type="script">
                            <value>
                              <![CDATA[ this.PidSearch(); ]]>
                            </value>
                          </list>
                        </e>
                        <e event="on-change" arguments="event">
                          <list type="script">
                            <value>
                              <![CDATA[
                                      if (0 != this.$refs.iinput_search_pid.currentValue.length) 
                                          return;
                                      this.conds_pid = -1;
                                      this.Reload();
                                      ]]>
                            </value>
                          </list>
                        </e>
                        <e event="on-blur" arguments="event">
                          <list type="script">
                            <value>
                              <![CDATA[ this.SearchInit(); ]]>
                            </value>
                          </list>
                        </e>
                      </e>
                    </iinput>
                    <select id="sel_status" desc="信号状态" source="lstCond">
                      <a>
                        <class>ivu-select-selection</class>
                      </a>
                      <s>
                        <width>150px</width>
                        <height>32px</height>
                        <margin-top>10px</margin-top>
                        <margin-right>10px</margin-right>
                        <float>right</float>
                        <font-size>14px</font-size>
                        <color>#515a6e</color>
                      </s>
                      <e>
                        <onchange>
                          <list type="script">
                            <value>
                              <![CDATA[
                                      switch(this.sel_status) {
                                          case "0":
                                              this.strStatus = "ALL";
                                              break;
                                          case "1":
                                              this.strStatus = "3";
                                              break;
                                          case "2":
                                              this.strStatus = "0";
                                              break;
                                          case "3":
                                              this.strStatus = "1";
                                              break;
                                      }
                                      this.Reload();
                                      ]]>
                            </value>
                          </list>
                        </onchange>
                      </e>
                    </select>
                    <button id="btn_SoptWarning">
                      <a>
                        <value>
                          <![CDATA[停止告警]]>
                        </value>
                        <class>ivu-btn</class>
                      </a>
                      <s>
                        <height>32px</height>
                        <margin-top>10px</margin-top>
                        <margin-right>10px</margin-right>
                        <float>right</float>
                      </s>
                      <e>
                        <onclick>
                          <list type="script">
                            <value>
                              <![CDATA[ 
                              this.ClearWarningList();
                              this.$refs.iTeleSig.resize();
                              ]]>
                            </value>
                          </list>
                        </onclick>
                      </e>
                    </button>
                    <button id="btn_Call">
                      <a>
                        <value>
                          <![CDATA[信号采集管理]]>
                        </value>
                        <class>ivu-btn</class>
                      </a>
                      <s>
                        <height>32px</height>
                        <margin-top>10px</margin-top>
                        <margin-right>10px</margin-right>
                        <float>right</float>
                      </s>
                      <e>
                        <onclick>
                          <list type="script">
                            <value>
                              <![CDATA[
						    this.ifm_xxcjgl = "/html/MainMessageMonitor_xhcjgl.html?sid="+this.init0;
                            this.show_xhcjgl = true;
							pdp.$refs.imodal_xhcjgl.footerHide=true;
                              ]]>
                            </value>
                          </list>
                        </onclick>
                      </e>
                    </button>
                  </c>
                </div>
                <div id="divYX">
                  <s>
                    <width>100%</width>
                  </s>
                  <ss>
                    <display>s_YX</display>
                  </ss>
                  <c>
                    <scrolltable id="iTeleSig" from="ds_YX">
                      <a ref="iTeleSig"></a>
                      <sa>
                        <border>true</border>
                        <stripe>false</stripe>
                        <height>h3 - 50</height>
                        <disabled-hover>true</disabled-hover>
                        <item-height>50</item-height>
                        <mergecol>
                          <![CDATA[[['pid'],['pid']]]]>
                        </mergecol>
                      </sa>
                      <c>
                        <icol desc="点号" from="ds_YX_pid">
                          <a width="50"></a>
                        </icol>
                        <icol desc="系统" from="ds_YX_sys">
                          <a width="100"></a>
                        </icol>
                        <icol desc="遥信内容" from="ds_YX_sigContent">
                          <a minWidth="400"></a>
                          <s>
                            <font-size>16px</font-size>
                          </s>
                        </icol>
                        <icol desc="合并信号内容" from="ds_YX_mergeName">
                          <a minWidth="100"></a>
                          <s>
                            <font-size>16px</font-size>
                          </s>
                        </icol>
                        <icol desc="主站取反" from="ds_YX_polarity">
                          <a maxWidth="90"></a>
                          <s>
                            <font-size>16px</font-size>
                          </s>
                        </icol>
                        <icol desc="前二">
                          <a width="50"></a>
                          <c>
                            <div>
                              <s>
                                <font-size>20px</font-size>
                              </s>
                              <ss>
                                <color>'undefined' === typeof(params.row.current2) ? '#fff' : (1==params.row.current2 ? '#FF0000' : '#00FF00')</color>
                              </ss>
                              <c>
                                <html>
                                  <sa html="'undefined' === typeof(params.row.current2) ? '' : (0!=params.row.current2.length ? '■' : '')"></sa>
                                </html>
                              </c>
                            </div>
                          </c>
                        </icol>
                        <icol desc="前一">
                          <a width="50"></a>
                          <c>
                            <div>
                              <s>
                                <font-size>20px</font-size>
                              </s>
                              <ss>
                                <color>'undefined' === typeof(params.row.current1) ? '#fff' : (1==params.row.current1 ? '#FF0000' : '#00FF00')</color>
                              </ss>
                              <c>
                                <html>
                                  <sa html="'undefined' === typeof(params.row.current1) ? '' : (0!=params.row.current1.length ? '■' : '')"></sa>
                                </html>
                              </c>
                            </div>
                          </c>
                        </icol>
                        <icol desc="当前">
                          <a width="50"></a>
                          <c>
                            <div>
                              <s>
                                <font-size>20px</font-size>
                              </s>
                              <ss>
                                <color>1==params.row.current ? '#FF0000' : '#00FF00'</color>
                              </ss>
                              <c>
                                <html>
                                  <sa html="0!=params.row.current.length ? '■' : ''"></sa>
                                </html>
                              </c>
                            </div>
                          </c>
                        </icol>
                        <icol desc="收到" from="ds_YX_rtime">
                          <a width="100"></a>
                        </icol>
                        <icol type="action" desc="完成">
                          <a width="50"></a>
                          <c>
                            <div>
                              <s>
                                <width>50px</width>
                                <height>49px</height>
                                <font-size>20px</font-size>
                                <vertical-align>middle</vertical-align>
                                <display>table-cell</display>
                              </s>
                              <c>
                                <html>
                                  <sa html="0!=params.row.finish.length ? (1 == params.row.finish ? '✓' : (2 == params.row.finish ? '✓' : (-1 == params.row.finish? '':'✘'))) : ''"></sa>
                                </html>
                              </c>
                            </div>
                          </c>
                        </icol>
                        <icol desc="确认" from="ds_YX_atime">
                          <a width="150"></a>
                        </icol>
                        <icol desc="确认人" from="ds_YX_user">
                          <a width="100"></a>
                        </icol>
                        <icol desc="原因/备注" from="ds_YX_desc">
                          <a width="200"></a>
                        </icol>
                      </c>
                    </scrolltable>
                  </c>
                </div>
                <div id="divYC">
                  <ss>
                    <display>s_YC</display>
                  </ss>
                  <s>
                    <width>100%</width>
                  </s>
                  <c>
                    <scrolltable id="iTeleMeter" from="ds_YC">
                      <a ref="iTeleMeter"></a>
                      <sa>
                        <border>true</border>
                        <stripe>false</stripe>
                        <height>h3 - 50</height>
                        <disabled-hover>true</disabled-hover>
                        <item-height>50</item-height>
                        <mergecol>
                          <![CDATA[[['pid'],['pid']]]]>
                        </mergecol>
                      </sa>
                      <c>
                        <icol desc="点号" from="ds_YC_pid">
                          <a  width="50"></a>
                        </icol>
                        <icol desc="系统" from="ds_YC_sys">
                          <a width="100"></a>
                        </icol>
                        <icol desc="遥测内容" from="ds_YC_sigContent">
                          <a minWidth="180"></a>
                        </icol>
                        <icol desc="收到" from="ds_YC_rtime">
                          <a width="100"></a>
                          <c>
                            <label>
                              <sa value="Number(params.row.rtime.split(' ')[0].split('-')[2]) == new Date().getDate() ? params.row.rtime.split(' ')[1] : params.row.rtime"></sa>
                            </label>
                          </c>
                        </icol>
                        <icol desc="当前值" from="ds_YC_value">
                          <a width="100"></a>
                        </icol>
                        <icol desc="设定值" from="ds_YC_current">
                          <a width="100"></a>
                          <c>
                            <iinput>
                              <a type="text" placeholder="未设定11"></a>
                              <sa disabled="params.row.finish.toString() == '1'" value="params.row.current"></sa>
                              <e>
                                <on-focus>
                                  <list type="script">
                                    <value>
                                      <![CDATA[console.log(1)]]>
                                    </value>
                                  </list>
                                </on-focus>
                                <on-blur>
                                  <list type="script">
                                    <value>
                                      <![CDATA[console.log(2)]]>
                                    </value>
                                  </list>
                                </on-blur>
                              </e>
                            </iinput>
                          </c>
                        </icol>
                        <icol desc="误差" from="ds_YC_ycprecision">
                          <a width="100"></a>
                        </icol>
                        <icol desc="完成">
                          <a width="50"></a>
                          <c>
                            <div>
                              <s>
                                <width>50px</width>
                                <height>49px</height>
                                <font-size>20px</font-size>
                                <vertical-align>middle</vertical-align>
                                <display>table-cell</display>
                              </s>
                              <c>
                                <html>
                                  <sa html="0!=params.row.finish.length ? (1 == params.row.finish ? '✓' : (2 == params.row.finish ? '✓' : (-1 == params.row.finish? '':'✘'))) : ''"></sa>
                                </html>
                              </c>
                            </div>
                          </c>
                        </icol>
                        <icol desc="确认" from="ds_YC_atime">
                          <a width="150"></a>
                          <c>
                            <label id="ycreset" show="params.row.Atime.length > 0">
                              <a title="双击重置"></a>
                              <sa value="Number(params.row.Atime.split(' ')[0].split('-')[2]) == new Date().getDate() ? params.row.Atime.split(' ')[1] : params.row.Atime"></sa>
                              <e>
                                <ondblclick>
                                  <list type="script">
                                    <value>
                                      <![CDATA[this.resetYcPoint(this.params);]]>
                                    </value>
                                  </list>
                                </ondblclick>
                              </e>
                            </label>
                            <button id="cfmbtn" show="params.row.Atime.length == 0 ">
                              <a s_margin-right="5px" class="ivu-btn ivu-btn-primary" value="确认"></a>
                              <e>
                                <onclick>
                                  <list type="script">
                                    <value>
                                      <![CDATA[this.confirmYc(this.params,"YC");]]>
                                    </value>
                                  </list>
                                </onclick>
                              </e>
                            </button>
                          </c>
                        </icol>
                        <icol desc="确认人" from="ds_YC_user">
                          <a width="100"></a>
                        </icol>
                        <icol desc="原因/备注" from="ds_YC_desc">
                          <a width="200"></a>
                        </icol>
                      </c>
                    </scrolltable>
                  </c>
                </div>
                <div id="divYC2">
                  <ss>
                    <display>s_YC_2</display>
                  </ss>
                  <s>
                    <width>100%</width>
                  </s>
                  <c>
                    <scrolltable id="iTeleMeterAngle" from="ds_YC_PQ">
                      <a ref="iTeleMeterAngle"></a>
                      <sa>
                        <border>true</border>
                        <stripe>false</stripe>
                        <height>h3 - 50</height>
                        <disabled-hover>true</disabled-hover>
                        <item-height>50</item-height>
                        <mergecol>
                          <![CDATA[[['pid'],['pid']]]]>
                        </mergecol>
                      </sa>
                      <c>
                        <icol desc="点号" from="ds_YC_PQ_pid">
                          <a width="50"></a>
                        </icol>
                        <icol desc="系统" from="ds_YC_PQ_sys">
                          <a width="100"></a>
                        </icol>
                        <icol desc="遥测内容" from="ds_YC_PQ_sigContent">
                          <a minWidth="180"></a>
                        </icol>
                        <icol desc="收到" from="ds_YC_PQ_rtime">
                          <a width="100"></a>
                          <c>
                            <label>
                              <sa value="Number(params.row.rtime.split(' ')[0].split('-')[2]) == new Date().getDate() ? params.row.rtime.split(' ')[1] : params.row.rtime"></sa>
                            </label>
                          </c>
                        </icol>
                        <icol desc="P-Q角度" from="ds_YC_PQ_PQ">
                          <a width="100"></a>
                        </icol>
                        <icol desc="COS值" from="ds_YC_PQ_value">
                          <a width="100"></a>
                        </icol>
                        <icol desc="COS设定值" from="ds_YC_PQ_COSSet">
                          <a width="120"></a>
                        </icol>
                        <icol desc="误差" from="ds_YC_PQ_ycprecision">
                          <a width="100"></a>
                        </icol>
                        <icol type="action" desc="完成">
                          <a width="40"></a>
                          <c>
                            <div>
                              <s>
                                <width>50px</width>
                                <height>49px</height>
                                <font-size>20px</font-size>
                                <vertical-align>middle</vertical-align>
                                <display>table-cell</display>
                              </s>
                              <c>
                                <html>
                                  <sa html="0!=params.row.finish.length ? (1 == params.row.finish ? '✓' : (2 == params.row.finish ? '✓' : (-1 == params.row.finish? '':'✘'))) : ''"></sa>
                                </html>
                              </c>
                            </div>
                          </c>
                        </icol>
                        <icol desc="确认" from="ds_YC_PQ_atime">
                          <a width="130"></a>
                          <c>
                            <label id="yc2reset" show="params.row.Atime.length > 0">
                              <a title="双击重置"></a>
                              <sa value="Number(params.row.Atime.split(' ')[0].split('-')[2]) == new Date().getDate() ? params.row.Atime.split(' ')[1] : params.row.Atime"></sa>
                              <e>
                                <ondblclick>
                                  <list type="script">
                                    <value>
                                      <![CDATA[this.resetYcPoint(this.params);]]>
                                    </value>
                                  </list>
                                </ondblclick>
                              </e>
                            </label>
                            <button id="cfmbtn1" show="params.row.Atime.length == 0 ">
                              <a s_margin-right="5px" class="ivu-btn ivu-btn-primary" value="确认"></a>
                              <e>
                                <onclick>
                                  <list type="script">
                                    <value>
                                      <![CDATA[this.confirmYc(this.params,"YC2");]]>
                                    </value>
                                  </list>
                                </onclick>
                              </e>
                            </button>
                          </c>
                        </icol>
                        <icol desc="确认人" from="ds_YC_PQ_user">
                          <a width="60"></a>
                        </icol>
                        <icol desc="原因/备注" from="ds_YC_PQ_desc">
                          <a width="200"></a>
                        </icol>
                      </c>
                    </scrolltable>
                  </c>
                </div>
              </c>
            </div>
          </c>
        </div>
        <div id="divRight">
          <s>
            <float>left</float>
            <background>#fff</background>
          </s>
          <ss>
            <width>w1+'px'</width>
            <height>h1+'px'</height>
            <display>d1</display>
          </ss>
          <c>
            <div>
              <s>
                <width>100%</width>
                <height>50px</height>
              </s>
              <c>
                <button id="btn_SOE">
                  <a>
                    <value>
                      <![CDATA[SOE事项]]>
                    </value>
                  </a>
                  <sa class="c4"></sa>
                  <s>
                    <margin-left>15px</margin-left>
                    <margin-right>10px</margin-right>
                    <margin-top>10px</margin-top>
                  </s>
                  <e>
                    <onclick>
                      <list type="script">
                        <value>
                          <![CDATA[this.SwitchRPage(this.s_SOE, "SOE");]]>
                        </value>
                      </list>
                    </onclick>
                  </e>
                </button>
                <div>
                  <s>
                    <float>right</float>
                    <height>100%</height>
                    <width>300px</width>
                  </s>
                  <ss>
                    <display>s_SOE</display>
                  </ss>
                  <c>
                    <icheckboxgroup desc="复选框组" id="iGroup_Soe">
                      <a ref="iGroup_Soe"></a>
                      <s>
                        <width>120px</width>
                        <margin-top>13px</margin-top>
                        <float>left</float>
                      </s>
                      <c>
                        <icheckbox desc="SOE时标不为空" id="iCheckBox_Soe">
                          <a label="SOE时标不为空" ref="iCheckBox_Soe"></a>
                        </icheckbox>
                      </c>
                    </icheckboxgroup>
                    <button id="btn_SoeClear">
                      <a class="ivu-btn ivu-btn-primary" value="清空SOE报文"></a>
                      <s>
                        <width>120px</width>
                        <height>32px</height>
                        <margin>auto</margin>
                        <margin-top>10px</margin-top>
                        <display>block</display>
                      </s>
                      <e>
                        <onclick>
                          <list type="script">
                            <value>
                              <![CDATA[ this.$refs.iSoE.data.splice(0, this.$refs.iSoE.data.length);
                              this.$refs.iSoE.resize(); ]]>
                            </value>
                          </list>
                        </onclick>
                      </e>
                    </button>
                  </c>
                </div>
              </c>
            </div>
            <div>
              <s>
                <clear>both</clear>
              </s>
            </div>
            <div>
              <s>
                <width>100%</width>
              </s>
              <ss>
                <display>s_SOE</display>
              </ss>
              <c>
                <scrolltable id="iSoE" border="1" stripe="1" from="ds_SoE">
                  <a ref="iSoE"></a>
                  <sa>
                    <border>true</border>
                    <stripe>true</stripe>
                    <height>h1-50</height>
                    <disabled-hover>true</disabled-hover>
                    <item-height>50</item-height>
                  </sa>
                  <e>
                    <e event="on-row-dblclick" arguments="">
                      <list type="script">
                        <value>
                          <![CDATA[ 
                          if (!MAINSTATION_TIME_FIRST_YX) {
                              this.PidSearch(arguments[0].pid.toString());
                          }
                          ]]>
                        </value>
                      </list>
                    </e>
                  </e>
                  <c>
                    <icol desc="序号">
                      <a width="100" key="index"></a>
                    </icol>
                    <icol desc="点号" from="ds_SoE_pid">
                      <a  width="100"></a>
                    </icol>
                    <icol desc="遥信内容" from="ds_SoE_sigContent">
                      <a minWidth="150"></a>
                    </icol>
                    <icol desc="状态" from="ds_SoE_pi">
                      <a width="100"></a>
                      <c>
                        <html>
                          <sa html="0!=params.row.pi.length ? ('1' == params.row.pi.toString() ? '动作' : '复归') : ''"></sa>
                        </html>
                      </c>
                    </icol>
                    <icol desc="SOE时间" from="ds_SoE_time">
                      <a width="200"></a>
                    </icol>
                  </c>
                </scrolltable>
              </c>
            </div>
          </c>
        </div>
        <div id="divStatistic">
          <s>
            <background>#fff</background>
            <height>30px</height>
            <float>left</float>
            <margin-top>5px</margin-top>
            <margin-bottom>5px</margin-bottom>
          </s>
          <ss>
            <width>w9 + 'px'</width>
          </ss>
          <c>
            <div>
              <a>
                <title>
                  <![CDATA[已完成/未通过/总数]]>
                </title>
              </a>
              <s>
                <float>right</float>
                <margin-top>5px</margin-top>
                <margin-left>10px</margin-left>
                <width>300px</width>
              </s>
              <c>
                <html>
                  <a html="信号完成情况："></a>
                </html>
                <html>
                  <sa html="statisticsInfo[0][0]"></sa>
                </html>
                <html>
                  <a>
                    <html>
                      <![CDATA[&nbsp;]]>
                    </html>
                  </a>
                </html>
              </c>
            </div>
            <div>
              <s>
                <float>left</float>
                <overflow>hidden</overflow>
              </s>
              <ss>
                <width>(w9 - 720) + 'px'</width>
              </ss>
              <c>
                <label>
                  <s>
                    <float>left</float>
                    <display>block</display>
                    <white-space>nowrap</white-space>
                    <cursor>pointer</cursor>
                    <margin-top>5px</margin-top>
                  </s>
                  <sa>
                    <value>strSysMsg</value>
                    <title>strSysMsg</title>
                  </sa>
                </label>
              </c>
            </div>
          </c>
        </div>
        <imodal id="imodal_xhcjgl" desc="信号采集管理" from="show_xhcjgl">
          <a ref="imodal_xhcjgl" width="1200" ok-text="信号采集管理-确定" title="信号采集管理" ></a>
          <sa mask-closable="false"></sa>
          <c>
            <div>
              <a s_height="700px" s_padding="0"></a>
              <c>
                <iframe>
                  <a>
                    <id>imodal_xhcjgl</id>
                    <frameborder>0</frameborder>
                    <scrolling>no</scrolling>
                  </a>
                  <s>
                    <border>0px</border>
                    <height>100%</height>
                    <width>100%</width>
                  </s>
                  <sa>
                    <src>ifm_xxcjgl</src>
                  </sa>
                </iframe>
              </c>
            </div>
          </c>
        </imodal>
        <imodal id="imodal_acceptanceUser" desc="验收人及电话" from="showAcceptance">
          <a ref="imodal_acceptanceUser" width="600" ok-text="保存" title="" ></a>
          <sa mask-closable="false"></sa>
          <c>
            <div>
              <a s_height="100px" s_padding="0"></a>
              <c>
                <div desc="左">
                  <a s_width="40%" s_height="100%" s_float="left" s_text-align="right"></a>
                  <c>
                    <div desc="验收人">
                      <a s_height="60px" s_width="100%" s_padding-top="10px"></a>
                      <c>
                        <label>
                          <a value="验收人：" s_font-size="15px"></a>
                        </label>
                      </c>
                    </div>
                    <div desc="联系方式">
                      <a s_height="60px" s_width="100%" ></a>
                      <c>
                        <label>
                          <a value="联系方式：" s_font-size="15px"></a>
                        </label>
                      </c>
                    </div>
                  </c>
                </div>
                <div desc="右">
                  <a s_width="60%" s_height="100%" s_float="right" s_text-align="left"></a>
                  <c>
                    <div desc="验收人">
                      <a s_height="60px" s_width="100%" s_padding-top="10px"></a>
                      <c>
                        <iinput id="iinput_accuser">
                          <a>
                            <ref>iinput_accuser</ref>
                            <type>text</type>
                          </a>
                          <sa>
                            <clearable>true</clearable>
                          </sa>
                          <s>
                            <width>180px</width>
                          </s>
                        </iinput>
                      </c>
                    </div>
                    <div desc="联系方式">
                      <a s_height="60px" s_width="100%"></a>
                      <c>
                        <iinput id="iinput_acctelno">
                          <a>
                            <ref>iinput_acctelno</ref>
                            <type>text</type>
                          </a>
                          <sa>
                            <clearable>true</clearable>
                          </sa>
                          <s>
                            <width>180px</width>
                          </s>
                        </iinput>
                      </c>
                    </div>
                  </c>
                </div>
              </c>
            </div>
          </c>
          <e>
            <e event="on-ok" arguments="">
              <list type="script">
                <value>
                  <![CDATA[
						  if(this.$refs.iinput_accuser.currentValue.length == 0 || this.$refs.iinput_acctelno.currentValue.length == 0){
						     this.$Modal.info({
							    title: "验收人和联系方式不能为空！"
							 });
							 return;
						  }
					      var taskCard = [];
                          taskCard.push(this.mid);
                          taskCard.push(0 !== this.$refs.iinput_accuser.currentValue.length ? this.$refs.iinput_accuser.currentValue : '');
                          taskCard.push(0 !== this.$refs.iinput_acctelno.currentValue.length ? this.$refs.iinput_acctelno.currentValue : '');
						  var dll = PDP.dll('Acceptance:Acceptance.AcceptanceLib.UpdateTaskCardUser',[taskCard]);
                          if(!dll.check('添加验收人',true)){
                              return;
                          }
						  this.operUser = this.ds_acc_user[0];
						  this.$Modal.success({
						    title: "保存成功！"
						  });
						  this.operUser = this.$refs.iinput_accuser.currentValue;
							]]>
                </value>
              </list>
            </e>
            <e event="on-cancel" arguments="">
              <list type="script">
                <value>
                  <![CDATA[
                 
                  ]]>
                </value>
              </list>
            </e>
          </e>
        </imodal>
        <imodal id="imodal_taskplan" desc="任务计划" from="showTaskplan">
          <a ref="imodal_taskplan" width="700" title="新建任务计划" ></a>
          <sa mask-closable="false">
            <footer-hide>true</footer-hide>
          </sa>
          <c>
            <div>
              <a s_height="625px" class="taskplan-wrapper"></a>
              <c>
                <div desc="任务计划创建面板">
                  <a class="taskplan-pane"></a>
                  <c>
                    <div desc="选择点号">
                      <a class="fsac"></a>
                      <c>
                        <div>
                          <c>
                            <label>
                              <a value="开始点号："></a>
                            </label>
                            <iselect id="point_start" desc="开始点号" source="ds_pid" from="sel_startpid">
                              <a ref="point_start"></a>
                              <sa clearable="true" filterable="true"></sa>
                              <e>
                                <on-change>
                                  <list type="script">
                                    <value>
                                      <![CDATA[ this.caculatePidCount(); ]]>
                                    </value>
                                  </list>
                                </on-change>
                              </e>
                            </iselect>
                          </c>
                        </div>
                        <div>
                          <c>
                            <label>
                              <a value="结束点号："></a>
                            </label>
                            <iselect id="point_end" desc="结束点号" source="ds_pid" from="sel_endpid">
                              <a ref="point_end"></a>
                              <sa clearable="true" filterable="true"></sa>
                              <e>
                                <on-change>
                                  <list type="script">
                                    <value>
                                      <![CDATA[ this.caculatePidCount(); ]]>
                                    </value>
                                  </list>
                                </on-change>
                              </e>
                            </iselect>
                          </c>
                        </div>
                        <div>
                          <c>
                            <label>
                              <a value="共计信号数量："></a>
                            </label>
                            <label>
                              <a class="blocklabel"></a>
                              <sa value="pid_count"></sa>
                            </label>
                          </c>
                        </div>
                      </c>
                    </div>
                    <div desc="选择方式">
                      <c>
                        <label>
                          <a value="确认方式："></a>
                        </label>
                        <iradiogroup id="taskplan_type" from="t_priority">
                          <a ref="taskplan_type"></a>
                          <c>
                            <iradio id="radio_aotu">
                              <a label="自动确认"></a>
                            </iradio>
                            <iradio id="radio_hand">
                              <a label="手动确认"></a>
                            </iradio>
                          </c>
                        </iradiogroup>
                      </c>
                    </div>
                    <div desc="确认取消">
                      <a class="btn-footer"></a>
                      <c>
                        <button id="btn_taskplan_ok">
                          <a class="ivu-btn">
                            <value>
                              <![CDATA[保存]]>
                            </value>
                          </a>
                          <e>
                            <onclick>
                              <list type="script" value="this.saveTaskPlan();"></list>
                            </onclick>
                          </e>
                        </button>
                        <button id="btn_taskplan_cancel">
                          <a class="ivu-btn">
                            <value>
                              <![CDATA[取消]]>
                            </value>
                          </a>
                          <e>
                            <onclick>
                              <list type="script" value="this.caculatelistPid();this.clearSelPid();"></list>
                            </onclick>
                          </e>
                        </button>
                      </c>
                    </div>
                  </c>
                </div>
                <div desc="任务计划表格">
                  <a class="taskplan-table"></a>
                  <c>
                    <div>
                      <a s_height="35px"></a>
                      <c>
                        <label>
                          <a value="任务计划记录"></a>
                        </label>
                        <button id="btn_taskplan_refresh">
                          <a type="button" class="ivu-btn" value="刷新" s_float="right" s_margin-right="10px"></a>
                          <e>
                            <onclick>
                              <list type="script" value="this.RefreshTaskState(true);"></list>
                            </onclick>
                          </e>
                        </button>
                      </c>
                    </div>
                    <scrolltable id="itaskTable" from="ds_taskplan">
                      <a ref="itaskTable" ></a>
                      <sa>
                        <border>true</border>
                        <stripe>false</stripe>
                        <height>451</height>
                        <item-height>40</item-height>
                      </sa>
                      <c>
                        <icol desc="序号">
                          <a width="50" key="index"></a>
                        </icol>
                        <icol desc="任务计划名" from="ds_taskplan_name">
                          <a minWidth="100"></a>
                          <c>
                            <label>
                              <a class="taskplan-name"></a>
                              <sa value="ds_taskplan_name"></sa>
                              <e>
                                <onclick>
                                  <list type="script">
                                    <value>
                                      <![CDATA[
																	 var flag = this.CheckState(this.params.row.state, "修改");
																	 if(flag) {
																	     this.$refs.point_start.clearSingleSelect();
																	     this.$refs.point_end.clearSingleSelect();
																	     this.$nextTick(function(){
																	         this.sel_startpid = this.params.row.startpid;
																	         this.sel_endpid = this.params.row.endpid;
																	         this.pid_count = this.params.row.count;
																	         this.updateId = this.params.row.id;
																	         this.caculatelistPid("table");
																	     }.bind(this));
																	 }
																	]]>
                                    </value>
                                  </list>
                                </onclick>
                              </e>
                            </label>
                          </c>
                        </icol>
                        <icol desc="验收状态" from="ds_taskplan_state">
                          <a width="100"></a>
                        </icol>
                        <icol desc="操作">
                          <a width="100"></a>
                          <c>
                            <button id="btn_taskplan_del">
                              <a class="ivu-btn">
                                <value>
                                  <![CDATA[删除]]>
                                </value>
                              </a>
                              <e>
                                <onclick>
                                  <list type="script">
                                    <value>
                                      <![CDATA[ 
																	 var flag = this.CheckState(this.params.row.state, "删除");
																	 if(flag){
																	    this.DelTaskPlan(this.params.row);
																	 }
																	]]>
                                    </value>
                                  </list>
                                </onclick>
                              </e>
                            </button>
                          </c>
                        </icol>
                      </c>
                    </scrolltable>
                  </c>
                </div>
              </c>
            </div>
          </c>
        </imodal>
      </c>
    </div>
  </ctrls>
  <scripts remark="其他脚本">
    <script event="created">
      <list type="script">
        <![CDATA[
        
		  if(this.pmid == "") {
		      var newSpan = $(".divMission",window.parent.document)[0];
		      if(newSpan.children.length == 2){
		        this.mid = newSpan.children[1].value;
		      }  
          this.staname = parent.document.getElementById("lbStation").innerText;
          this.isZong =  $(".divChannel span",window.parent.document)[1].innerText == "综自" ? "like" : "not like";
		  }
		  else {
		      this.mid = Number(this.pmid);vm
          this.staname = PDP.read('ConnMain','SignalData:GetMissonName',[this.mid]).value[0][0].split("-")[0];
          this.isZong =  PDP.read('ConnMain','SignalData:GetMissonName',[this.mid]).value[0][1] == 1 ? "like" : "not like";
	      }
		  if(this.mid != -1) {
		      this.select_ds_YX_content();
		  }
      this.statisticsInfo = PDP.read('ConnMain','SignalData:GetYxStatisticsInfo',[this.mid]).value;
		]]>
      </list>
      <list type="select" ds="ds_spaceYX"></list>
      <list type="select" ds="ds_spaceYC"></list>
      <list type="select" ds="ds_pidList"></list>
      <list type="select" ds="ds_channel"></list>
      <list type="select" ds="ds_acceptanceState"></list>
      <list type="select" ds="ds_SL_count"></list>
      <list type="select" ds="ds_taskplan"></list>
      <list type="script">
        <![CDATA[
          var vm = this;
          window.MAINSTATION_TIME_FIRST_YX = false;
          window.MAINSTATION_TIME_FIRST_YC = false;
          
          this.confirmYc = (params,type) => {
            if(type == "YC"){
              if(!this.CheckAcceptanceUser()) { //判断当前任务卡是否存入验收人
                return;
              }
              vm.params = params;
              vm.sysType = params.row.sys;
              vm.cConfirm = 0 !== params.row.finish.length && '1' === params.row.finish.toString() ? "ivu-btn ivu-btn-primary" : "ivu-btn";
              //信号描述为备用二字时，可以直接点击确认按钮
              if(params.row.sigContent.replaceAll(" ", "") === "备用" || params.row.sigContent.replaceAll(" ", "") === "/" || params.row.sigContent.replaceAll(" ", "").length === 0) {
                vm.confirmWithoutCheck(params.row, "YC");
                vm.$refs.iTeleMeter.resize();
                vm.statisticsInfo = PDP.read('ConnMain','SignalData:GetYcStatisticsInfo',[vm.mid]).value;
                vm.dealYcNp();
                return;
              }
              var msg = "";

              
              if(0 === msg.length) {
                if(params.row.sigContent.includes('对时') || params.row.sigContent.includes('GPS') || params.row.sigContent.includes('gps') || params.row.sigContent.includes('定值区幅值')){
                  //msg = '';
                  vm.confirmWithoutCheck(params.row, "YC");
                  vm.$refs.iTeleMeter.resize();
                  vm.statisticsInfo = PDP.read('ConnMain','SignalData:GetYcStatisticsInfo',[vm.mid]).value;
                  vm.dealYcNp();
                  return;
                }
                else{
                  msg = Number(params.row.ycprecision.split("%")[0]) <= 5 ? '' : '误差不合规(小于5%)';
                  if(msg.length != 0){
                    vm.warning_msg = msg;
                    vm.showModal_warning = true;
                    return;
                  }
                }
              }
              //信号描述中含有通讯中断、通信中断时，验收时间可超过五分钟
              if(!params.row.sigContent.includes("通讯中断") && !params.row.sigContent.includes("通信中断")) {
                msg = vm.CheckConfirmTime(params.row.rtime);
              }


              if(0 === msg.length) {
                
                var o=PDP.exec([{ type: 'modify', db: 'ConnMain', sql: "SignalData:UpdateRtimeValue", args: [params.row.rtime,params.row.value,params.row.sid,params.row.pid,params.row.sys,vm.mid,params.row.dst,params.row.channel,Number(params.row.ycprecision.split("%")[0])]}]);
                if(o.check('更新数据',true)){
                  vm.$Message.success("数据更新成功!");
                  
                }
                var dll_set = PDP.dll('Acceptance:Acceptance.AcceptanceLib.SetMainYcStatus', ["YC", pdp.init0, vm.mid, params.row.pid, 'FINISH', 1, vm.operUser, params.row.sys, "", "", "_AUTO",params.row.dst,params.row.rtime,Number(params.row.ycprecision.split("%")[0])]);
                if(!dll_set.check('设置遥测状态', true))
                  return;
                if(dll_set.value[0].startsWith("false")) {
                  vm.$Modal.error({
                    title: dll_set.value[0].split(',')[1]
                  });
                  return;
                }
                vm.$set(vm.ds_YC[params.row.index-1], 7, 1); //finish
                vm.$set(vm.ds_YC[params.row.index-1], 8, dll_set.value[0]); //Atime
                vm.$set(vm.ds_YC[params.row.index-1], 11,vm.operUser); //user
                vm.$refs.iTeleMeter.resize();
                vm.statisticsInfo = PDP.read('ConnMain','SignalData:GetYcStatisticsInfo',[vm.mid]).value;
                vm.dealYcNp();
              } else {
                vm.warning_msg = msg;
                vm.showModal_warning = true;
              }
            }else if(type == "YC2"){
              if(!vm.CheckAcceptanceUser()) { //判断当前任务卡是否存入验收人
                return;
              }
              vm.params = params;
              vm.cConfirm = 0 !== params.row.finish.length && '1' === params.row.finish.toString() ? "ivu-btn ivu-btn-primary" : "ivu-btn";
              var msg = "";
              //信号描述中含有通讯中断、通信中断时，验收时间可超过五分钟
              if(!params.row.sigContent.includes("通讯中断") && !params.row.sigContent.includes("通信中断")) {
                msg = vm.CheckConfirmTime(params.row.rtime)
              }
              if(0 === msg.length) {
                msg = Number(params.row.ycprecision.split("%")[0]) <= 5 ? '' : '误差不合规(小于5%)';
              }

              if(0 === msg.length) {
                //sid pid stat cid user
                var dll_set = PDP.dll('Acceptance:Acceptance.AcceptanceLib.SetMainYcStatus', ["YC_2", vm.init0, vm.mid, params.row.pid, 'FINISH', 1, vm.operUser, params.row.sys, params.row.PQ, params.row.value, "_AUTO",params.row.dst,params.row.rtime,Number(params.row.ycprecision.split("%")[0])]);
                if(!dll_set.check('设置遥测状态', true)) {
                  return;
                }
                vm.$set(vm.ds_YC_PQ[params.row.index-1], 8, 1); //finish
                vm.$set(vm.ds_YC_PQ[params.row.index-1], 9, dll_set.value[0]); //Atime
                vm.$set(vm.ds_YC_PQ[params.row.index-1], 12,vm.operUser); //user
                vm.$refs.iTeleMeterAngle.resize();
                vm.statisticsInfo = PDP.read('ConnMain','SignalData:GetYc2StatisticsInfo',[vm.mid]).value;
                vm.dealYcNp();
              } else {
                vm.warning_msg = msg;
                vm.showModal_warning = true;
              }
            }
          }
          this.dealYcNp = () => {
            this.chooseYc=[];
            this.needPoints = [];
            if(this.cbtn == "YC"){
              for(var i=0;i<this.$refs.iTeleMeter.data.length;i++){
                  if(this.$refs.iTeleMeter.data[i].current!="")
                    this.chooseYc.push(i);
                  if(this.$refs.iTeleMeter.data[i].current!="" && this.$refs.iTeleMeter.data[i].Atime == ""){
                    this.needPoints.push(this.$refs.iTeleMeter.data[i].pid);
                  }
              }
            }else if(this.cbtn == "YC2"){
              for(var i=0;i<this.$refs.iTeleMeterAngle.data.length;i++){
                this.chooseYc.push(i);
                this.needPoints.push(this.$refs.iTeleMeterAngle.data[i].pid);
              }
            }
            this.needPoints = [...new Set(this.needPoints)];
            this.sendNeedPoints("YC");
          }
          this.chooseYc = [];
          var self = this;
          window.Main_Yc_Buffer = [];
          this.ds_space = [];
          var thisPage = this;
          this.operUser = this.ds_acc_user[0];

          this.CheckAcceptanceState = function() {
            this.select_ds_checkstate();
            if(Number(this.ds_state_count[0]) != 0)
              return true;
            return false;
          }
          var dll = PDP.dll('Acceptance:Acceptance.AcceptanceLib.GetCfmTimeSpan', [this.init0]);
          if(!dll.check('获得确认时间间隔', true))
            return;
          this.cfmTimeSpan = Number(dll.value[0]);

          this.resize = function() {
            this.w0 = this.w10 = this.w1 = this.w11 = document.body.clientWidth;
            this.h00 = document.body.clientHeight;
            this.h0 = Math.floor((this.h00 - 35) * 0.6);
            this.h1 = Math.floor((this.h00 - 35) * 0.4);
            this.w9 = document.body.clientWidth;
            this.h3 = this.h0;

            if('undefined' !== typeof(this.$refs.iTeleSig)) {
              this.$refs.iTeleSig.resize();
            }
            if('undefined' !== typeof(this.$refs.iSoE)) {
              this.$refs.iSoE.resize();
            }
          };

          $(window).resize(function() {
              pdp.resize();
            });

          this.resize();

          this.getSystemByIp = function(ip) {
            for(var i = 0; i < this.open3000mainip.length; i++) {
              if(ip == this.open3000mainip[i])
                return "open3000";
            }
            for(var i = 0; i < this.d5000mainip.length; i++) {
              if(ip == this.d5000mainip[i])
                return "d5000";
            }
            return "";
          }

          this.getIndexByPidChannel = function(iPid, sys, lstData) {
            if(isNaN(iPid))
              return -1;
            let index = this.getIndexByPid(iPid, lstData);
            if(-1 === index)
              return -1;
            if("" === sys)
              return -1;
            for(; index < lstData.length && iPid >= lstData[index].pid; ++index) {
              if(sys === lstData[index]['sys'].toString() && iPid.toString() === lstData[index]['pid'].toString()) {
                return index;
              }
            }
            return -1;
          };

          this.CheckConfirmTime = function(strTime) {
            if('undefined' === typeof(strTime) || 0 === strTime.toString().length)
              return '不可无时间数据！';
            var t = new Date(strTime);

            if((((new Date()).getTime() - t.getTime()) / (60 * 1000)) < this.cfmTimeSpan) {

              return '';
            } else {
              return '请在' + this.cfmTimeSpan + '分钟内确认信号！';
            }

          };

          this.CheckSignal_YX = function(data) {
            //strSid strPid strChannel strCurrent strRtime,
            var dll = PDP.dll('Acceptance:Acceptance.AcceptanceLib.GetConfirmTime_YX', [data.sid, data.pid, data.channel, data.current, data.rtime, this.sysType, false]);
            if(!dll.check('获取对应信号时间', true))
              return "error";
            return dll.value[0];
          };

          this.TimeColRender = function(h, params) {
            var strVal = params.row[params.column.key].toString();
            if(0 === strVal.length)
              return h('div', [h('span', {
                style: {
                  display: 'block'
                }
              }, '')]);
            else if(strVal + '' === '无时标') {
              return h('div', [h('span', {
                style: {
                  display: 'block'
                }
              }, strVal)]);
            }
            var lst = strVal.split(' ');

            //对比是不是当天的数据
            var isSame = Ysh.Time.formatString(Ysh.Time.toString(strVal), '111000') === Ysh.Time.formatString(Ysh.Time.toString(new Date()), '111000');

            var p = params;

            if(lst.length <= 1 || isSame) {
              var strTime = 2 === lst.length ? lst[1] : lst[0];
              strTime = 8 >= strTime.length ? strTime : strTime.substring(0, 8);

              return h('div', {
                attrs: {
                  title: '双击重置'
                },
                on: {
                  dblclick: () => {
                    pdp.strChannel = p.row.channel.toString();
                    pdp.pointId = "点号" + p.row.pid + "：";
                    pdp.sysType = p.row.sys;
                    pdp.params = p;
                    pdp.strAngle = 'YC_2' == pdp.operTypeL ? p.row.PQ.toString() : "";
                    pdp.cUnfinish = "ivu-btn ivu-btn-primary";
                    pdp.Unfinish();
                    if(pdp.strAngle == "" && pdp.operTypeL=="YC"){
                      let o=PDP.exec([{ type: 'modify', db: 'ConnMain', sql: "SignalData:ResetPoint", args: [pdp.init0,pdp.strChannel,p.row.pid,pdp.mid,p.row.sys,p.row.value]}]);
                      if(o.check('重置数据',true)){
                        this.$Message.success("重置数据成功!");
                      }
                    }
                    //pdp.resetYcState(p.row.rowindex,["","",""]);
                  }
                }
              }, [h('span', {
                style: {
                  display: 'block',
                  height: '45px',
                  paddingTop: '15px'
                }
              }, strTime)]);
            }

            var strTime = 8 >= lst[1].length ? lst[1] : lst[1].substring(0, 8);
            return h('div', {
              attrs: {
                title: '双击重置'
              },
              style: {
                height: '45px',
                paddingTop: '5px'
              },
              on: {
                dblclick: () => {
                  pdp.strChannel = p.row.channel.toString();
                  pdp.pointId = "点号" + p.row.pid + "：";
                  pdp.sysType = p.row.sys;
                  pdp.params = p;
                  pdp.strAngle = 'YC_2' == pdp.operTypeL ? p.row.PQ.toString() : "";
                  pdp.cUnfinish = "ivu-btn ivu-btn-primary";
                  pdp.Unfinish();
                  if (pdp.strAngle == "" && pdp.operTypeL == "YC") {
                    let o = PDP.exec([{
                        type: 'modify',
                        db: 'ConnMain',
                        sql: "SignalData:ResetPoint",
                        args: [pdp.init0, pdp.strChannel, p.row.pid, pdp.mid, p.row.sys, p.row.value]
                    }]);
                    if (o.check('重置数据', true)) {
                        this.$Message.success("重置数据成功!");
                    }
                  }else if(pdp.strAngle != "" && pdp.operTypeL == "YC_2"){
                    let o = PDP.exec([{
                      type: 'modify',
                      db: 'ConnMain',
                      sql: "SignalData:ResetPointPq",
                      args: [pdp.init0, pdp.strChannel, p.row.pid, pdp.mid, p.row.sys, pdp.strAngle]
                    }]);
                    if (o.check('重置数据', true)) {
                        this.$Message.success("重置数据成功!");
                    }
                  }
                  //pdp.resetYcState(p.row.rowindex,["","",""]);
                }
              }
            }, [
              h('span', {
                style: {
                  display: 'block'
                }
              }, lst[0].replace(/\//g, '-')),
              h('span', {
                style: {
                  display: 'block'
                }
              }, strTime)
            ]);
          };
          this.resetYcPoint = p => {
            vm.strChannel = p.row.channel.toString();
            vm.pointId = "点号" + p.row.pid + "：";
            vm.sysType = p.row.sys;
            vm.params = p;
            vm.strAngle = 'YC_2' == vm.operTypeL ? p.row.PQ.toString() : "";
            vm.cUnfinish = "ivu-btn ivu-btn-primary";
            vm.Unfinish();
            if (vm.strAngle == "" && vm.operTypeL == "YC") {
              let o = PDP.exec([{
                  type: 'modify',
                  db: 'ConnMain',
                  sql: "SignalData:ResetPoint",
                  args: [vm.init0, vm.strChannel, p.row.pid, vm.mid, p.row.sys, p.row.value]
              }]);
              if (o.check('重置数据', true)) {
                vm.$set(vm.ds_YC[p.row.index-1], 7, ''); //finish
                vm.$set(vm.ds_YC[p.row.index-1], 8, ''); //Atime
                vm.$set(vm.ds_YC[p.row.index-1], 11,''); //user
                vm.$set(vm.ds_YC[p.row.index-1], 4,''); 
                vm.$set(vm.ds_YC[p.row.index-1], 5,'');
                vm.$set(vm.ds_YC[p.row.index-1], 6,'');
                vm.$set(vm.ds_YC[p.row.index-1], 14,'');
                this.$Message.success("重置数据成功!");
              }
              vm.statisticsInfo = PDP.read('ConnMain','SignalData:GetYcStatisticsInfo',[vm.mid]).value;
            }else if(vm.strAngle != "" && vm.operTypeL == "YC_2"){
              let o = PDP.exec([{
                type: 'modify',
                db: 'ConnMain',
                sql: "SignalData:ResetPointPq",
                args: [vm.init0, vm.strChannel, p.row.pid, vm.mid, p.row.sys, vm.strAngle]
              }]);
              if (o.check('重置数据', true)) {
                vm.$set(vm.ds_YC_PQ[p.row.index-1], 8, ''); //finish
                vm.$set(vm.ds_YC_PQ[p.row.index-1], 9, ''); //Atime
                vm.$set(vm.ds_YC_PQ[p.row.index-1], 12,''); //user
                vm.$set(vm.ds_YC_PQ[p.row.index-1], 7,'');
                vm.$set(vm.ds_YC_PQ[p.row.index-1], 6,'');
                vm.$set(vm.ds_YC_PQ[p.row.index-1], 17,'');
                this.$Message.success("重置数据成功!");
              }
              vm.statisticsInfo = PDP.read('ConnMain','SignalData:GetYc2StatisticsInfo',[vm.mid]).value;
            }
          }
          this.resetYcState = function(index, arr) {
            this.$set(this.ds_YC[index], 7, arr[0]); //finish
            this.$set(this.ds_YC[index], 8, arr[1]); //Atime
            this.$set(this.ds_YC[index], 11, arr[2]); //user
          }
          this.dateFtt = function(fmt, date) {
            var o = {
              "M+": date.getMonth() + 1, //月份   
              "d+": date.getDate(), //日   
              "h+": date.getHours(), //小时   
              "m+": date.getMinutes(), //分   
              "s+": date.getSeconds(), //秒   
              "q+": Math.floor((date.getMonth() + 3) / 3), //季度   
              "S": date.getMilliseconds() //毫秒   
            };
            if(/(y+)/.test(fmt))
              fmt = fmt.replace(RegExp.$1, (date.getFullYear() + "").substr(4 - RegExp.$1.length));
            for(var k in o)
              if(new RegExp("(" + k + ")").test(fmt))
                fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : (("00" + o[k]).substr(("" + o[k]).length)));
            return fmt;
          }

          this.confirmWithoutCheck = function(row, type) {
            var d = new Date();
            var curtime = this.dateFtt('yyyy-MM-dd hh:mm:ss', d);
            var arrInfoInfo = [];
            arrInfoInfo.push(this.init0); //sid
            arrInfoInfo.push(row.pid); //pid
            arrInfoInfo.push(0 !== row.finish.length && ('1' == row.finish.toString()) ? "" : "1");
            arrInfoInfo.push(curtime);
            arrInfoInfo.push(this.ds_acc_user[0]);
            arrInfoInfo.push(row.desc);
            arrInfoInfo.push(this.mid);
            arrInfoInfo.push(row.sys); //sys
            arrInfoInfo.push("tbtelemeter1"); //tbname
            var dll = PDP.dll('Acceptance:Acceptance.AcceptanceLib.ChangePointYcState', [arrInfoInfo]);

            if(dll === "" || !dll.check('确认', true)) {
              return;
            }
            this.UpdateSignalState(curtime);
          }
          this.ConfirmBtnRender_YC = function(h, params) {
            return h('div', [h('Button', {
              attrs: {
                class: 'ivu-btn ivu-btn-primary'
              },
              style: {
                marginRight: '5px'
              },
              on: {
                click: () => {
                  if(!this.CheckAcceptanceUser()) { //判断当前任务卡是否存入验收人
                    return;
                  }
                  pdp.params = params;
                  pdp.sysType = params.row.sys;
                  pdp.cConfirm = 0 !== params.row.finish.length && '1' === params.row.finish.toString() ? "ivu-btn ivu-btn-primary" : "ivu-btn";
                  //信号描述为备用二字时，可以直接点击确认按钮
                  if(params.row.sigContent.replaceAll(" ", "") === "备用" || params.row.sigContent.replaceAll(" ", "") === "/" || params.row.sigContent.replaceAll(" ", "").length === 0) {
                    this.confirmWithoutCheck(params.row, "YC");
                    pdp.$refs.iTeleMeter.resize();
                    this.statisticsInfo = PDP.read('ConnMain','SignalData:GetYcStatisticsInfo',[this.mid]).value;
                    pdp.dealYcNp();
                    return;
                  }
                  var msg = "";

                  
                  if(0 === msg.length) {
                    if(params.row.sigContent.includes('对时') || params.row.sigContent.includes('GPS') || params.row.sigContent.includes('gps') || params.row.sigContent.includes('定值区幅值')){
                      //msg = '';
                      this.confirmWithoutCheck(params.row, "YC");
                      pdp.$refs.iTeleMeter.resize();
                      this.statisticsInfo = PDP.read('ConnMain','SignalData:GetYcStatisticsInfo',[this.mid]).value;
                      pdp.dealYcNp();
                      return;
                    }
                    else{
                      msg = Number(params.row.ycprecision.split("%")[0]) <= 5 ? '' : '误差不合规(小于5%)';
                      if(msg.length != 0){
                        pdp.warning_msg = msg;
                        pdp.showModal_warning = true;
                        return;
                      }
                    }
                  }
                  //信号描述中含有通讯中断、通信中断时，验收时间可超过五分钟
                  if(!params.row.sigContent.includes("通讯中断") && !params.row.sigContent.includes("通信中断")) {
                    msg = pdp.CheckConfirmTime(params.row.rtime);
                  }


                  if(0 === msg.length) {
                    
                    var o=PDP.exec([{ type: 'modify', db: 'ConnMain', sql: "SignalData:UpdateRtimeValue", args: [params.row.rtime,params.row.value,params.row.sid,params.row.pid,params.row.sys,this.mid,params.row.dst,params.row.channel,Number(params.row.ycprecision.split("%")[0])]}]);
                    if(o.check('更新数据',true)){
                      this.$Message.success("数据更新成功!");
                    }
                    var dll_set = PDP.dll('Acceptance:Acceptance.AcceptanceLib.SetMainYcStatus', ["YC", pdp.init0, this.mid, params.row.pid, 'FINISH', 1, this.operUser, params.row.sys, "", "", "_AUTO",params.row.dst,params.row.rtime,Number(params.row.ycprecision.split("%")[0])]);
                    if(!dll_set.check('设置遥测状态', true))
                      return;
                    if(dll_set.value[0].startsWith("false")) {
                      this.$Modal.error({
                        title: dll_set.value[0].split(',')[1]
                      });
                      return;
                    }
                    pdp.$refs.iTeleMeter.data[params.row.index - 1].finish = 1;
                    pdp.$refs.iTeleMeter.data[params.row.index - 1].Atime = dll_set.value[0];
                    pdp.$refs.iTeleMeter.data[params.row.index - 1].user = this.operUser;
                    pdp.$refs.iTeleMeter.resize();
                    this.statisticsInfo = PDP.read('ConnMain','SignalData:GetYcStatisticsInfo',[this.mid]).value;
                    pdp.dealYcNp();
                    //pdp.resetYcState(params.row.rowindex,[1,dll_set.value[0],this.operUser]);
                  } else {
                    pdp.warning_msg = msg;
                    pdp.showModal_warning = true;
                  }
                }
              }
            }, '确认')]);
          };

          this.ConfirmBtnRender_YC_PQ = function(h, params) {
            return h('div', [h('Button', {
              attrs: {
                class: 'ivu-btn ivu-btn-primary'
              },
              style: {
                marginRight: '5px'
              },
              on: {
                click: () => {
                  if(!this.CheckAcceptanceUser()) { //判断当前任务卡是否存入验收人
                    return;
                  }
                  pdp.params = params;
                  pdp.cConfirm = 0 !== params.row.finish.length && '1' === params.row.finish.toString() ? "ivu-btn ivu-btn-primary" : "ivu-btn";
                  var msg = "";
                  //信号描述中含有通讯中断、通信中断时，验收时间可超过五分钟
                  if(!params.row.sigContent.includes("通讯中断") && !params.row.sigContent.includes("通信中断")) {
                    msg = pdp.CheckConfirmTime(params.row.rtime)
                  }
                  if(0 === msg.length) {
                    msg = Number(params.row.ycprecision.split("%")[0]) <= 5 ? '' : '误差不合规(小于5%)';
                  }

                  if(0 === msg.length) {
                    //sid pid stat cid user
                    var dll_set = PDP.dll('Acceptance:Acceptance.AcceptanceLib.SetMainYcStatus', ["YC_2", pdp.init0, this.mid, params.row.pid, 'FINISH', 1, this.operUser, params.row.sys, params.row.PQ, params.row.value, "_AUTO",params.row.dst,params.row.rtime,Number(params.row.ycprecision.split("%")[0])]);
                    if(!dll_set.check('设置遥测状态', true)) {
                      return;
                    }

                    pdp.$refs.iTeleMeterAngle.data[params.row.index - 1].finish = 1;
                    pdp.$refs.iTeleMeterAngle.data[params.row.index - 1].Atime = dll_set.value[0];
                    pdp.$refs.iTeleMeterAngle.data[params.row.index - 1].user = this.operUser;
                    pdp.$refs.iTeleMeterAngle.resize();
                    let finished = 0;
                    let tag = 0;
                    let all = [...new Set(pdp.ds_YC_PQ_pid)].length;
                    for(let i=0,len=pdp.$refs.iTeleMeterAngle.data.length;i<len-1;i++){
                      let item = pdp.$refs.iTeleMeterAngle.data[i];
                      let item1 = pdp.$refs.iTeleMeterAngle.data[i+1];
                      if(item1.pid == item.pid){
                        if(item1.Atime == ""){
                          tag = 0;
                        }else{
                          tag = 1;
                        }
                      }else{
                        if(item.Atime != "" && tag == 1){
                          finished++
                        }
                      }
                    }
                    if(tag == 1){
                      finished++
                      tag=0;
                    }
                    pdp.statisticsInfo = [[finished + "/" + (all-finished) + "/" + all]];
                    //pdp.statisticsInfo = PDP.read('ConnMain','SignalData:GetYc2StatisticsInfo',[this.mid]).value;
                    pdp.dealYcNp();
                  } else {
                    pdp.warning_msg = msg;
                    pdp.showModal_warning = true;
                  }
                }
              }
            }, '确认')]);
          };
          
          
          this.CheckAcceptanceUser = function() {
            this.select_ds_acceptanceState();
            if(this.ds_acc_user.length == 0 || this.ds_acc_user[0] == "" || this.ds_acc_user[0] == "NULL") {
              this.showAcceptance = true;
              this.$refs.iinput_acctelno.currentValue = '';
              this.$refs.iinput_accuser.currentValue = '';
              return false;
            } else
              return true;
          }
          /*this.iTeleMeter_columns[5].render = function(h, params) {
            let strVal = params.row[params.column.key].toString();
            let bUnfinfished = ('1' === params.row.finish.toString());
            if(0 === strVal.length)
              strVal = '';
            var p = params;
            return h('Input', {
              props: {
                type: 'text',
                value: strVal,
                placeholder: '未设定',
                disabled: bUnfinfished
              },
              on: {
                'on-blur': (event) => {
                  pdp.FOCUS_ON_YC_INPUT = false;

                  if('undefined' !== typeof(Main_Yc_Buffer) && 0 !== Main_Yc_Buffer.length) {
                    for(var i in Main_Yc_Buffer) {
                      pdp.$refs.iTeleMeter.data[i] = Main_Yc_Buffer[i];
                    }
                    Main_Yc_Buffer.splice(0, Main_Yc_Buffer.length);
                  }

                  if(0 === event.currentTarget.value.length || strVal === event.currentTarget.value) {
                    event.currentTarget.value = strVal;
                    return;
                  }
                  if(!isNaN(Number(event.currentTarget.value))) {
                    let index = p.row.rowindex;
                    if(pdp.chooseYc.includes(index)) {
                      if(pdp.$refs.iTeleMeter.data[index].desc == "")
                        pdp.$refs.iTeleMeter.data[index].desc = "设定值1次修改";
                      else {
                        let num = pdp.$refs.iTeleMeter.data[index].desc.replace(/[^\d]/g, ' ').trim();
                        pdp.$refs.iTeleMeter.data[index].desc = "设定值" + (++num) + "次修改";
                      }
                    }
                    pdp.$refs.iTeleMeter.data[index].current = event.currentTarget.value;
                    pdp.ds_YC[index][4] = event.currentTarget.value;
                    pdp.ds_YC[index][9] = pdp.$refs.iTeleMeter.data[index].desc;
                    var dll = PDP.dll('Acceptance:Acceptance.AcceptanceLib.SetYcSetValue', [p.row.sid, p.row.pid, p.row.channel, event.currentTarget.value, p.row.sys, self.mid.toString(), "_AUTO", pdp.$refs.iTeleMeter.data[index].desc]);
                    if(!dll.check('设置遥测设定值', true))
                      return;
                    pdp.$nextTick(pdp.$refs.iTeleMeter.resize);
                  }
                  pdp.dealYcNp();
                },
                'on-focus': (event) => {
                  pdp.FOCUS_ON_YC_INPUT = true;
                }
              }
            });
          };*/

          //this.iSoE_columns[4].render = this.iTeleSig_columns[8].render = this.TimeColRender;
          this.iSoE_columns[4].render = this.TimeColRender;
          this.itaskTable_columns[2].render = function(h, params) {
            var strVal = params.row[params.column.key];
            if(0 === strVal)
              return h('div', {
                style: {},
                on: {}
              }, '未完成');
            else
              return h('div', {
                style: {},
                on: {}
              }, '已完成');
          };
          /*this.iTeleMeter_columns[8].render = function(h, params) {
            var strVal = params.row[params.column.key];
            if(0 === strVal.length)
              return pdp.ConfirmBtnRender_YC(h, params);
            else
              return pdp.TimeColRender(h, params);
          };*/
          this.iTeleSig_columns[12].render =
            this.iTeleMeter_columns[10].render =
            this.iTeleMeterAngle_columns[11].render =
            function(h, params) {
              let strVal = params.row[params.column.key].toString();
              var p = params;
              if(p.row.desc.includes("设定值") && p.row.desc.includes("次修改")) { //备注为"设定值"+n+"次修改"时，不允许再修改备注
                return h('div', {
                  style: {},
                  on: {}
                }, [
                  h('span', {
                    style: {
                      display: 'block',
                      width: '195px',
                      height: '30px',
                      lineHeight: '30px',
                      float: 'left'
                    }
                  }, strVal)
                ]);
              } else {
                return h('div', {
                  style: {},
                  on: {}
                }, [
                  h('span', {
                    style: {
                      display: 'block',
                      width: '170px',
                      height: '30px',
                      lineHeight: '30px',
                      float: 'left'
                    }
                  }, strVal),
                  h('div', {
                    style: {
                      display: 'inline-block',
                      height: '25px',
                      width: '25px'
                    },
                    on: {
                      click: () => {
                        pdp.select_index = p.row._index;
                        pdp.pointId = p.row.pid;
                        pdp.stationInfo = "";
                        pdp.sysType = params.row.sys;
                        pdp.pointId = "点号" + pdp.pointId + "：";
                        pdp.cConfirm = 0 != p.row.finish.length && 1 == p.row.finish ? "ivu-btn ivu-btn-primary" : "ivu-btn";
                        pdp.cUnfinish = 0 != p.row.finish.length && 0 == p.row.finish ? "ivu-btn ivu-btn-primary" : "ivu-btn";

                        switch (pdp.operTypeL) {
                          case "YX_2":
                            pdp.strChannel = p.row.channel;
                            pdp.stationInfo += "  主站" + p.row.channel;
                            pdp.strRemark = pdp.$refs.iinput_ReasonYx.currentValue = p.row.desc;
                            pdp.showModal_YX = true;
                            break;
                          case "YC":
                            pdp.strChannel = p.row.channel;
                            pdp.stationInfo += "  主站" + p.row.channel;
                            pdp.strRemark = pdp.$refs.iinput_ReasonYc.currentValue = p.row.desc;
                            pdp.showModal_YC = true;
                            break;
                          case "YC_2":
                            pdp.strAngle = p.row.PQ;
                            pdp.strChannel = p.row.channel;
                            pdp.stationInfo += "  主站" + p.row.channel;
                            pdp.strRemark = pdp.$refs.iinput_ReasonYc.currentValue = p.row.desc;
                            pdp.showModal_YC = true;
                            break;
                        }
                      }
                    }
                  }, [h('icon', {
                    attrs: {
                      class: 'ivu-icon ivu-icon-ios-create'
                    },
                    style: {
                      fontSize: '25px',
                      float: 'right',
                      color: '#666'
                    },
                  })])
                ]);
              }
            };
          //转换遥测值，参数是对象
          this.YcValueDeal_row = function(row) {
            var strVal = row["value"];
            if(0 != strVal.toString().length) {
              var coefficient = row["coefficient"].toString(); //系数
              var fullCode = row["fullCode"].toString(); //满码
              var baseValue = row["baseValue"].toString(); //基数
              if(coefficient.length > 0 && coefficient != "无" && fullCode.length > 0 &&
                fullCode != "0" && fullCode != "无") {
                strVal = Number(strVal) * Number(coefficient) / Number(fullCode) + Number(baseValue);
              }
              strVal = Number(strVal).toFixed(3).toString();
            }
            return strVal;
          }
          this.getYc2Error = (data,pos) => {
            let value = data.value == "undefined" ? "" : data.value.toString();
            let set = data.COSSet == "undefined" ? "" : data.COSSet.toString();
            if(0 === value.length || 0 === set.length){
              vm.$set(vm.ds_YC_PQ[pos],17,0);
              return;
            }
            value = Number(value);
            set = Number(set);
            if(value === set) {
              vm.$set(vm.ds_YC[pos],17,'0%');
              return;
            }
            if(0 == set) {
              //value小于0.1,按0.1处理
              if(value < 0.1) value = 0.1;
              var precision = (value / 10 * 100).toFixed(2);
              vm.$set(vm.ds_YC[pos],17,precision.toString() + '%');
              return;
            }
            var precision = ((Math.abs((value - set) / set)) * 100).toFixed(4);
            vm.$set(vm.ds_YC_PQ[pos],17,precision + '%');
          }
          //精度列(误差)
          /*this.iTeleMeterAngle_columns[7].render = function(h, params) {
            if('1' === params.row.finish.toString())
              return h('span', '已完成');
            var value = params.row.value == "undefined" ? "" : pdp.YcValueDeal_row(params.row).toString();
            var set = params.row.COSSet == "undefined" ? "" : params.row.COSSet.toString();
            if(0 === value.length || 0 === set.length)
              return h('span', '');
            value = Number(value);
            set = Number(set);

            if(value === set) {
              return h('span', '0.00%');
            }
            var precision = '';
            if(0 == set) {
              //value小于0.1，按0.1处理
              if(value < 0.1) value = 0.1;
              precision = (value / 10 * 100).toFixed(2);
              return h('span', precision.toString() + '%');
            }

            precision = ((Math.abs((value - set) / set)) * 100).toFixed(4);
            params.row.ycprecision = precision;
            return h('span', precision.toString() + '%');
          };*/
          //确认列
          /*this.iTeleMeterAngle_columns[9].render = function(h, params) {
            var strVal = params.row[params.column.key];
            if(0 === strVal.length)
              return pdp.ConfirmBtnRender_YC_PQ(h, params);
            else
              return pdp.TimeColRender(h, params);
          };*/

          this.GetTaskId = function() {
            if(-1 === this.taskId) {
              var dll = PDP.dll('Acceptance:Acceptance.AcceptanceLib.AddTask', [this.init0]);
              if(!dll.check('插入task', true))
                return;
              this.taskId = dll.value[0];

              var sTable = this.GetScrolltable();
              this.disabled = true;
              for(var i = 0; i < sTable.data.length; ++i) {
                sTable.data[i].taskid = this.taskId;
              }
            }
          };

          this.iTeleSig_columns[2].render = function(h, params) {
            var info = pdp.ds_YX_content.find(r => r[0] == params.row.pid && r[3] == params.row.sys);
            var strVal = info ? info[1] : "";
            return h('div', [h('Tooltip', {
                props: {
                  maxWidth: 300,
                  placement: 'bottom',
                  content: strVal,
                  whiteSpace: 'normal',
                  wordBreak: 'break-all'
                },
                style: {}
              },
              [h('p', {
                attrs: {
                  class: 'ivu-table-cell-ellipsis-ysh'
                },
                style: {
                  cursor: 'pointer',
                  fontSize: '16px'
                },
                on: {
                  click: (event) => {
                    pdp.MarkSoeByPid(params.row.pid.toString());
                  }
                }
              }, strVal)])]);
          };
          this.iTeleSig_columns[11].render = function(h, params) {
            let strVal = params.row["finish"].toString();
            if(strVal != "")
              return h('div', {
                style: {},
                on: {}
              }, (params.row["user"].toString() == "" ? pdp.ds_acc_user[0] : params.row["user"].toString()));
            else
              return h('div', {
                style: {},
                on: {}
              }, '');
          };
          this.iSoE_columns[2].render = function(h, params) {
            var info = pdp.ds_YX_content.find(r => r[0] == params.row.pid);
            var strVal = info ? info[1] : "";
            return h('div', [h('Tooltip', {
                props: {
                  maxWidth: 300,
                  placement: 'bottom',
                  content: strVal,
                  whiteSpace: 'normal',
                  wordBreak: 'break-all'
                },
                style: {}
              },
              [h('p', {
                attrs: {
                  class: 'ivu-table-cell-ellipsis-ysh'
                },
                style: {
                  cursor: 'pointer',
                  fontSize: '16px'
                }
              }, strVal)])]);
          };
          //this.iTeleMeterAngle_columns[3].render = this.iSoE_columns[4].render = this.iTeleMeter_columns[3].render = this.TimeColRender;
          this.objYcValue = {};
          var self = this;
          this.getYcValue = (data,pos) => {
            let strVal = data.value;
            if(0 != strVal.length) {
              let coefficient = data.coefficient; //系数
              let fullCode = data.fullCode; //满码
              let baseValue = data.baseValue; //基数
              if(coefficient.length > 0 && coefficient != "无" && fullCode.length > 0 && fullCode != "0" && fullCode != "无") {
                strVal = Number(strVal) * Number(coefficient) / Number(fullCode) + Number(baseValue);
              }
              strVal = Number(strVal).toFixed(5).toString();
              self.objYcValue[data.pid + "_" + data.sys] = strVal; //保存转换后的遥测值
            }
            vm.$set(vm.ds_YC[pos],6,strVal);
          }
          /*this.iTeleMeter_columns[4].render = function(h, params) { //计算遥测值，遥测值=整型值*系数/满码+基数
            var strVal = params.row[params.column.key];
            if(0 != strVal.length) {
              var coefficient = params.row.coefficient; //系数
              var fullCode = params.row.fullCode; //满码
              var baseValue = params.row.baseValue; //基数
              if(coefficient.length > 0 && coefficient != "无" && fullCode.length > 0 && fullCode != "0" && fullCode != "无") {
                strVal = Number(strVal) * Number(coefficient) / Number(fullCode) + Number(baseValue);
              }
              strVal = Number(strVal).toFixed(5).toString();
              self.objYcValue[params.row.pid + "_" + params.row.sys] = strVal; //保存转换后的遥测值
            }
            return h('span', {
              style: {
                display: 'block'
              }
            }, strVal);
          };*/
          this.getYcError = (data,pos) => {
            var value = data.value.toString();
            var set = data.current.toString();
            if(0 === value.length || 0 === set.length){
              vm.$set(vm.ds_YC[pos],14,0);
              return;
            }
            value = Number(self.objYcValue[data.pid + "_" + data.sys]);
            set = Number(set);
            if(value === set) {
              vm.$set(vm.ds_YC[pos],14,'0%');
              return;
            }
            if(0 == set) {
              vm.$set(vm.ds_YC[pos],14,'100%');
              return;
            }
            var precision = ((Math.abs((value - set) / set)) * 100).toFixed(4);
            vm.$set(vm.ds_YC[pos],14,precision + '%');
          }
          /*this.iTeleMeter_columns[6].render = function(h, params) {
            if('1' === params.row.finish.toString())
              return h('span', '已完成');
            var value = params.row.value.toString();
            var set = params.row.current.toString();
            if(0 === value.length || 0 === set.length)
              return h('span', '');
            value = Number(self.objYcValue[params.row.pid + "_" + params.row.sys]);
            set = Number(set);

            if(value === set) {
              return h('span', '0.00%');
            }

            if(0 == set) {
              return h('span', '100.00%');
            }
            var precision = ((Math.abs((value - set) / set)) * 100).toFixed(4);
            params.row.ycprecision = precision.toString();
            return h('span', precision.toString() + '%');
          };*/
          this.getYc2Value = (data,pos) => {
            let strVal = data.value;
            if(0 != strVal.toString().length) {
              let coefficient = data.coefficient; //系数
              let fullCode = data.fullCode; //满码
              let baseValue = data.baseValue; //基数
              if(coefficient.length > 0 && coefficient != "无" && fullCode.length > 0 && fullCode != "0" && fullCode != "无") {
                strVal = Number(strVal) * Number(coefficient) / Number(fullCode) + Number(baseValue);
              }
              strVal = Number(strVal).toFixed(5).toString();
            }
            vm.$set(vm.ds_YC_PQ[pos],7,strVal);
          }
          /*this.iTeleMeterAngle_columns[5].render = function(h, params) { //计算遥测值，遥测值=整型值*系数/满码+基数
            var strVal = params.row[params.column.key];
            if(0 != strVal.toString().length) {
              var coefficient = params.row.coefficient; //系数
              var fullCode = params.row.fullCode; //满码
              var baseValue = params.row.baseValue; //基数
              if(coefficient.length > 0 && coefficient != "无" && fullCode.length > 0 &&
                fullCode != "0" && fullCode != "无") {
                strVal = Number(strVal) * Number(coefficient) / Number(fullCode) + Number(baseValue);
              }
              strVal = Number(strVal).toFixed(10).toString();
            }
            return h('span', {
              style: {
                display: 'block'
              }
            }, strVal);
          };*/
          this.saveTaskPlan = function() {
            if(this.ds_taskplan.length > 0 && this.ds_taskplan[this.ds_taskplan.length - 1][5] == 0 && this.updateId == -1) {
              this.$Modal.info({
                content: pdp.ds_taskplan[pdp.ds_taskplan.length - 1][4] + "未完成验收，无法新建任务计划！"
              });
              return;
            }
            //数据检查
            if(this.sel_startpid === "" || this.sel_endpid === "" || this.sel_endpid === undefined) {
              this.$Modal.info({
                content: "请选择点号！"
              });
              return;
            }
            if(this.sel_endpid != this.ds_pidList[this.ds_pidList.length-1][0] && this.pid_count <100){
                this.$Modal.info({
                  content: "任务计划点号数量不可少于100！"
              })
              return;
            }
            for(var i = 0; i < this.ds_taskplan.length; i++) {
              var arr = [this.sel_startpid, this.sel_endpid];
              for(var j = 0; j < 2; j++) {
                if(arr[j] >= this.ds_taskplan[i][1] && this.ds_taskplan[i][2] >= arr[j] && this.updateId != this.ds_taskplan[i][0]) {
                  this.$Modal.info({
                    content: this.ds_taskplan[i][4] + "中已包含点号" + arr[j] + ",请重新选择！"
                  });
                  return;
                }
              }
            }
            var dll = PDP.dll('Acceptance:Acceptance.AcceptanceLib.AddOrUpdateTaskPlan', [this.mid, this.sel_startpid, this.sel_endpid, this.pid_count, this.updateId]);
            var strType = this.updateId == -1 ? "新建" : "修改";
            if(!dll.check('保存任务计划', true)) {
              this.$Modal.error({
                content: strType + "任务计划失败！"
              });
              return;
            }
            this.$Modal.success({
              content: strType + "任务计划成功！"
            });
            this.caculatelistPid();
            this.clearSelPid();
            if(this.ds_taskplan.length == 2) {
              this.CheckAuto("YX");
            }
            this.RefreshTaskState(false);
          }

          this.clearSelPid = function() {
            this.$refs.point_end.clearSingleSelect();
            this.pid_count = "";
            this.updateId = -1;
          }

          this.caculatePidCount = function() {
            if(this.sel_startpid !== "" && this.sel_endpid !== "") {
              this.select_ds_pidCount();
              this.pid_count = this.ds_pidCount[0][0];
            }
          }

          this.caculatelistPid = function(type) {
            var index, nextindex;
            if("table" == type) {
              index = this.ds_pidList_pid1.indexOf(this.sel_startpid);
            } else {
              this.select_ds_taskplan();
              if(this.ds_taskplan.length == 0) { //表格数据全部删除,起始点号取数组第一个数据
                this.sel_startpid = this.ds_pidList_pid1[0];
                index = 0;
              } else {
                var curPid = this.ds_taskplan_epid[this.ds_taskplan_epid.length - 1]; //获取上一个任务计划的结束点号
                index = this.ds_pidList_pid1.indexOf(curPid);
                this.sel_startpid = this.ds_pidList_pid1[index + 1];
              }
            }
            //this.ds_pidList[index]作为点号下拉列表的起始值
            if(index >= 100) index -= 100;
            else index = 0;
            //this.ds_pidList[nextindex]作为点号下拉列表的末尾值
            if(index + 401 <= this.ds_pidList.length) nextindex = index + 401;
            else nextindex = this.ds_pidList.length;
            this.ds_pid = this.ds_pidList.slice(index, nextindex);
          }
          this.CheckState = function(state, type) {
            if(state == 1) {
              this.$Modal.info({
                content: "任务计划已验收完成，无法" + type + "!"
              });
              return false;
            }
            return true;
          }
          this.DelTaskPlan = function(row) {
            this.$Modal.confirm({
              title: '是否删除该任务计划？',
              onOk: function() {
                var dll = PDP.dll('Acceptance:Acceptance.AcceptanceLib.DelTaskPlan', [pdp.mid, row.startpid, row.endpid]);
                if(!dll.check('删除任务计划', true)) {
                  this.$Modal.error({
                    content: "删除任务计划失败！"
                  });
                  return;
                } else {
                  this.$Modal.success({
                    content: "删除任务计划成功！"
                  });
                  pdp.caculatelistPid();
                  pdp.updateId = -1;
                }
              }
            });
          }
	      ]]>
      </list>
      <list type="script">
        <![CDATA[
          this.testSend = function(){
            let obj = {
              "zdOrder": "测试任务卡",
              "zdAccount": "测试人员",
              "zdTel": "测试电话",
            };
            var dll = PDP.dll('Acceptance:Acceptance.AcceptanceLib.Post_Json', ["http://10.180.97.75:8080/services/acsRi/checkDataTable",obj]);
            console.log(dll);
          }
          this.sendCheckResult = function() {
          /*
          "miId":"4028b21e7a5260be017a526957140005",
          "zdOrder":"xxx",      任务卡名称
          "zdAccount":"xxx",    用户名
          "zdTel":"xxx",        用户联系方式
          "zdFsCheck":"是",     厂站核对是否完成
          "zdMainCheck":"是",   主站校核是否完成
          "zdCheckNote":"是",   是否全部验收完成
          "zdCheckTime":"是"    全部验收完成时间
          */
          this.select_ds_Result();
          var allResult = this.ds_Result[0][4] == "是" && this.ds_Result[0][5] == "是" ? "是" : "否";
          let atime = allResult == "是" ? this.ds_Result[0][6] : "";
          var obj = {
            "miId": this.ds_Result[0][0],
            "zdOrder": this.ds_Result[0][1],
            "zdAccount": this.ds_Result[0][2],
            "zdTel": this.ds_Result[0][3],
            "zdFsCheck": this.ds_Result[0][4],
            "zdMainCheck": this.ds_Result[0][5],
            "zdCheckNote": allResult,
            "zdCheckTime": atime,
            "processInstanceId": this.ds_Result[0][7]
          }
          $.ajax({
            url: 'http://10.180.97.75:8080/services/acsRi/checkDataTable',
            //url: 'http://10.15.0.25:8030/api/Home/DataTable',
            type: "POST",
            dataType: "json",
            data: JSON.stringify(obj),
            contentType: "application/json",
            error: function(err) {
              var result = err;
              this.$Modal.error({
                title: "验收结果上传失败！",
                content: "失败原因：" + err.statusText
              });
              console.log("上传结果", err);
            }.bind(pdp),
            success: function(data) {
              this.$Modal.success({
                title: "验收结果上传成功！"
              });
              console.log("上传结果", data);
            }.bind(pdp)
          });
        }
		    ]]>
      </list>
      <list type="script">
        <![CDATA[
          var _this = this;
          this.ws = Helper.getOutterObj("wsMain");
          //判断是否满足自动验收的条件
          this.CheckAuto = function(strtype) {
            //任务卡是否调试验收完成并且有任务计划或者点号数量小于200
            var strMid = this.mid;
            var strSid = this.init0;
            this.ws.send(JSON.stringify({
              ObjName: "SYSTEM",
              OpType: "SETAUTO",
              Sid: strSid,
              Data: {
                type: strtype,
                mid: strMid
              },
            }));
          }
          this.sendNeedPoints = strtype => {
            this.ws.send(JSON.stringify({
              ObjName: "SYSTEM",
              OpType: "SETAUTO",
              Sid: _this.init0,
              Data: {
                type: strtype,
                mid: _this.mid,
                points: _this.needPoints.toString()
              },
            }));
          }
          /*setTimeout(function() {
                this.CheckAuto("YX");
                  }.bind(this), 500);*/
          this.CheckInterval = function(pos) {
            var prepreRow = this.$refs.iTeleSig.data[pos - 2];
            var preRow = this.$refs.iTeleSig.data[pos - 1];
            var curRow = this.$refs.iTeleSig.data[pos];
            console.log("位置："+pos);
            console.log(prepreRow);
            console.log(preRow);
            console.log(curRow);
            var resetFlag = false;
            for(var y = this.ds_taskplan.length - 1; y >= 0; y--) {
              if(this.ds_taskplan[y][2] == preRow.pid && this.ds_taskplan[y][5] != 0) {
                console.log("判断任务是否为任务计划结束点号且计划已完成");
                console.log(this.ds_taskplan[y]);
                console.log(preRow);
                resetFlag = true;
                break;
              }
            }
            if(resetFlag) return; //如果上一个信号是任务卡最后一个点号，就不重置时间，否则每次验收都会被重置，就验收不下去了
            if(preRow["Atime"] != "") {
              //计算时间差多少小时
              var interval = (new Date(curRow["Atime"]).getTime() - new Date(preRow["Atime"]).getTime()) / (3600000);
              var day = new Date(curRow["Atime"]).getDate() - new Date(preRow["Atime"]).getDate();
              if(day > 0 || interval > 0.5) {
                this.$Modal.info({
                  content: "如厂站核对中断时间过长，已核对数据将在30分钟后清零，建议先进行厂站调试（非必要），如遥信数量超过200，可创建任务计划分批核对！"
                });
              }
              if(day > 0 || interval > 1) {
                this.$Modal.info({
                  content: "距验收上一个信号的时间已超过1小时，信号确认失败，重置任务计划状态！"
                });
                this.CheckAuto("YX");
                console.log("间隔时间："+interval+"----"+day);
                setTimeout(function() {
                  var isAll;
                  if(this.ds_pidList.length < 200 || this.ds_taskplan.length == 0) isAll = true;
                  else isAll = false;
                  console.log(isAll);
                  var dll = PDP.dll('Acceptance:Acceptance.AcceptanceLib.UpdateTaskPlan', [curRow["pid"], this.mid, isAll]);
                  this.select_ds_YX();
                  this.$refs.iTeleSig.resize();
                }.bind(this), 1000);
              }
            }
          }
          this.objMerge = {};
          this.getMergeSigInfo = function() {
            for(var i = 0; i < this.ds_YX.length; i++) {
              if(this.ds_YX[i][1] == "d5000" && this.ds_YX[i][13] != "") { //d5000系统且合并信号不为空
                if(this.objMerge[this.ds_YX[i][13]] == undefined) {
                  this.objMerge[this.ds_YX[i][13]] = [i];
                } else {
                  this.objMerge[this.ds_YX[i][13]].push(i);
                }
              }
            }
          }
          this.beforeCloseYC = function() {
            this.$Modal.confirm({
              title: '离开页面后，遥测数据停止接收，验收遥测时需再次点击开始遥测验收按钮，是否确认离开？',
              onOk: function() {
                _this.SwitchLPage(_this.s_YX, "YX_2");
                _this.clearYCHisData();
              }
            });
          }
          this.clearYCHisData = function() {
            var dll = PDP.dll('Acceptance:Acceptance.AcceptanceLib.ClearYCData', [this.mid]);
          }
          this.formatTime = function(time, type) {
            switch (type) {
              case 0:
                if(time != "") {
                  time = time.split(" ")[0];
                  time = time.split("-")[0] + "年" + time.split("-")[1] + "月" + time.split("-")[2] + "日";
                }
                break;
              case 1:
                if(time != "") {
                  time = time.split(" ")[0];
                  time = time.split("-")[0] + time.split("-")[1] + time.split("-")[2];
                }
            }
            return time;
          }
          this.RefreshTaskState = function(type) {
            if(this.ds_taskplan.length == 0) return;
            var taskplan = this.ds_taskplan[this.ds_taskplan.length - 1];
            if(taskplan[5] == 0) {
              var flag = true;
              for(var i = 0; i < this.ds_YX.length; i++) {
                if(this.ds_YX[i][0] == taskplan[2]) {
                  if(this.ds_YX[i][8] != 1 && this.ds_YX[i][8] != 2) {
                    flag = false;
                  }
                }
              }
              if(flag) {
                var dll = PDP.dll('Acceptance:Acceptance.AcceptanceLib.UpdateTaskPlanState', [taskplan[0]]);
                if(!dll.check('刷新任务计划状态', true))
                  return;
                this.select_ds_taskplan();
              }
            }
            if(type)
              this.$Message.info("已刷新", 2000);
          }
        ]]>
      </list>
    </script>
    <script event="mounted">
      <list type="script">
        <![CDATA[
          var vm = this;
          this.SetRowid = function(lst) {
            for(let i = 0; i < lst.length; ++i)
              this.$set(lst[i], "rowid", i);
          };
          this.SetRowid(this.$refs.iTeleMeter.data);
          var count_r = -1;
          var thisPage = this;
          this.sel_status = "0";

          //闪烁绿色
          this.TWINKLE_GREEN = '#8ACFCD';
          //闪烁红色
          this.TWINKLE_RED = '#F69D8F';
          //闪烁灰色
          this.TWINKLE_GRAY = '#CCCCCC';
          //闪烁黄色
          this.TWINKLE_YELLOW = '#FFFF00';

          this.MarkSoeByPid = function(pid) {
            this.selectPid = this.selectPid === pid ? '-1' : pid;
            this.$refs.iSoE.resize();
          };

          this.SwitchLPage = function(isShow, type) {
            this.s_YX = this.s_YC = this.s_YC_2 = "none";
            this.c0 = this.c1 = this.c2 = "ivu-btn";
            this.operTypeL = type;
            this.sel_status = "0";
            this.conds_desc = "####";
            this.conds_pid = -1;
            this.$refs.iinput_search_desc.currentValue = "";
            this.$refs.iinput_search_pid.currentValue = "";
            this.r_priority = '按点号排序';
            this.ds_space.splice(0, this.ds_space.length);
            switch (type) {
              case "YX_2":
                this.c0 = "ivu-btn ivu-btn-primary";
                this.s_YX = "";
                for(var i = 0; i < this.ds_spaceYX.length; ++i)
                  this.ds_space.push(this.ds_spaceYX[i]);
                setTimeout(function() {
                  this.CheckAuto("YX");
                }.bind(this), 500);
                this.taskBtnShow = true;
                this.isOpenYc = false;
                this.chooseYc = [];
                break;
              case "YC":
                this.c1 = "ivu-btn ivu-btn-primary";
                this.s_YC = "";
                for(var i = 0; i < this.ds_spaceYC.length; ++i)
                  this.ds_space.push(this.ds_spaceYC[i]);
                this.taskBtnShow = false;
                break;
              case "YC_2":
                this.c2 = "ivu-btn ivu-btn-primary";
                this.s_YC_2 = "";
                for(var i = 0; i < this.ds_spaceYC.length; ++i)
                  this.ds_space.push(this.ds_spaceYC[i]);
                this.taskBtnShow = false;
                break;
            }
            this.Reload1();
            this.ScrolltableResize("LEFT");
          };

          this.SwitchRPage = function(isShow, type) {
            this.c3 = this.c4 = this.c5 = this.c6 = this.c7 = this.c8 = "ivu-btn";
            this.s_SOE = "none";
            switch (type) {
              case "SOE":
                this.select_ds_SoE();
                this.c4 = "ivu-btn ivu-btn-primary";
                this.operTypeR = "SOE";
                this.s_SOE = "";
                this.sel_MsgType = 0;
                break;
            }
            this.ScrolltableResize("RIGHT");
          };
          this.Reload = function() {
            var type = "" == this.s_YX ? "YX_2" : ("" == this.s_YC ? "YC" : "YC_2");
            switch (type) {
              case "YX_2":
                this.select_ds_YX();
                this.getMergeSigInfo();
                this.$nextTick(function() {
                  pdp.SetTeleSigDisplayClass(pdp.$refs.iTeleSig, this.LST_CLASS_COLS);
                });
                break;
              case "YC":
                this.select_ds_YC();
                this.SetRowid(pdp.$refs.iTeleMeter);
                break;
              case "YC_2":
                this.select_ds_YC_PQ();
                this.SetRowid(pdp.$refs.iTeleMeterAngle);
                break;
            }
            this.$nextTick(function() {
              var divS = this.GetScrolltable().divScroll;
              if(divS) {
                this.GetScrolltable().divScroll.scrollTop(0);
              }
            });
          }
          
          

          this.Confirm = function() {
            var strOldStat = "ivu-btn ivu-btn-primary" === this.cConfirm ? 'FINISH' : ("ivu-btn ivu-btn-primary" === this.cUnfinish ? 'UNFINISH' : 'RESET');
            if("ivu-btn ivu-btn-primary" === this.cConfirm) {
              this.operSignal = "RESET";
              this.cConfirm = "ivu-btn";
            } else {
              this.operSignal = "FINISH";
              this.cConfirm = "ivu-btn ivu-btn-primary";
            }
            this.pointId = this.params.row.pid;
            this.strChannel = this.params.row.channel;
            try {
              this.strChannel = 1;
              this.invoke_dll_SetTestSigStatus();
              console.log(this.operTime);
              if(this.operTime.startsWith("false")) {
                this.$Modal.error({
                  title: this.operTime.split(",")[1]
                });
                return;
              }
              this.strAngle = "";
              this.pointId = "点号" + this.pointId + "：";
              this.cUnfinish = "ivu-btn";
              this.UpdateSignalState((0 === this.operTime.length) ? "RESET" : this.operTime);
              this.UpdateSignalInfo(this.params.row.channel.toString(), strOldStat);
              this.ScrolltableResize("LEFT");
            } catch (e) {
              console.log(e.message);
            }
          };

          this.Unfinish = function() {
            var strOldStat = "ivu-btn ivu-btn-primary" === this.cConfirm ? 'FINISH' : ("ivu-btn ivu-btn-primary" === this.cUnfinish ? 'UNFINISH' : 'RESET');
            if("ivu-btn ivu-btn-primary" === this.cUnfinish) {
              this.operSignal = "RESET";
              this.cUnfinish = "ivu-btn";
            } else {
              this.operSignal = "UNFINISH";
              this.cUnfinish = "ivu-btn ivu-btn-primary";
            }
            try {
              this.pointId = this.pointId.substring(2, this.pointId.length - 1);
              this.strChannel = 1;
              this.invoke_dll_SetTestSigStatus();
              console.log(this.operTime);
              this.pointId = "点号" + this.pointId + "：";
              this.cConfirm = "ivu-btn";
              this.UpdateSignalState(this.operSignal);
              this.UpdateSignalInfo(this.params.row.channel.toString(), strOldStat);
              this.ScrolltableResize("LEFT");
            } catch (e) {
              console.log(e.message);
            }
          };
          this.UpdateSignalState = function(strOperType, strRemark) {
            var sTable = this.GetScrolltable();
            var iPos = 0;
            for(; iPos < sTable.data.length; ++iPos) {
              if(this.params.row.pid === sTable.data[iPos].pid && this.params.row.channel === sTable.data[iPos].channel &&
                this.params.row.sys === sTable.data[iPos].sys)
                break;
            }
            if("YC_2" == this.operTypeL) { //遥测角度转换需要继续定位到角度也相同
              for(; iPos < sTable.data.length; ++iPos) {
                if(this.params.row.pid === sTable.data[iPos].pid && this.params.row.channel === sTable.data[iPos].channel &&
                  this.params.row.sys === sTable.data[iPos].sys && this.params.row.PQ === sTable.data[iPos].PQ)
                  break;
              }
            }
            if(iPos >= sTable.data.length)
              return;
            switch (strOperType) {
              case 'RESET':
                sTable.data[iPos].finish = "";
                sTable.data[iPos].Atime = "";
                sTable.data[iPos].user = "";
                sTable.data[iPos].rtime = "";
                sTable.data[iPos].value = "";
                sTable.data[iPos].ycprecision = "";
                sTable.data[iPos].current = "";
                return;
              case 'UNFINISH':
                sTable.data[iPos].finish = 0;
                sTable.data[iPos].Atime = this.operTime;
                sTable.data[iPos].user = this.operUser;
                if('undefined' !== typeof(strRemark)) {
                  sTable.data[iPos].desc = strRemark;
                }
                return;
            }
            sTable.data[iPos].user = this.operUser;
            sTable.data[iPos].finish = 1;
            sTable.data[iPos].Atime = strOperType;
          };

          this.UpdateSignalInfo = function(strChannel, strOldStat) {
            var lstInfo = [];
            eval("lstInfo = this.n" + strChannel + ".split('/')");
            var lstTemp = ['FINISH', 'UNFINISH'];
            if(3 !== lstInfo.length)
              return;
            var iPos = -1;
            if(-1 !== lstTemp.indexOf(strOldStat) && -1 !== lstTemp.indexOf(this.operSignal)) {
              if('FINISH' === strOldStat) {
                lstInfo[0] = (Number(lstInfo[0]) > 0) ? (Number(lstInfo[0]) - 1).toString() : '0';
                lstInfo[1] = (Number(lstInfo[1]) + 1).toString();
              } else if('UNFINISH' === strOldStat) {
                lstInfo[1] = (Number(lstInfo[1]) > 0) ? (Number(lstInfo[1]) - 1).toString() : '0';
                lstInfo[0] = (Number(lstInfo[0]) + 1).toString();
              }
            } else if('RESET' === strOldStat) {
              if('FINISH' === this.operSignal) {
                lstInfo[0] = (Number(lstInfo[0]) + 1).toString();
              } else if('UNFINISH' === this.operSignal) {
                lstInfo[1] = (Number(lstInfo[1]) + 1).toString();
              }
            } else if('FINISH' === strOldStat && 'RESET' === this.operSignal) {
              lstInfo[0] = (Number(lstInfo[0]) > 0) ? (Number(lstInfo[0]) - 1).toString() : '0';
            } else if('UNFINISH' === strOldStat && 'RESET' === this.operSignal) {
              lstInfo[1] = (Number(lstInfo[1]) > 0) ? (Number(lstInfo[1]) - 1).toString() : '0';
            }
            eval("this.n" + strChannel + "='" + lstInfo.join('/') + "'");
          };

          this.ScrolltableResize = function(strLocation) {
            if("LEFT" === strLocation) {
              switch (this.operTypeL) {
                case "YX_2":
                  this.$nextTick(this.$refs.iTeleSig.resize);
                  break;
                case "YC":
                  this.$nextTick(this.$refs.iTeleSig.resize);
                  setTimeout(function() {
                    pdp.$refs.iTeleSig.resize();
                  }, 1000);
                  break;
                case "YC_2":
                  this.$nextTick(this.$refs.iTeleMeterAngle.resize);
                  setTimeout(function() {
                    pdp.$refs.iTeleMeterAngle.resize();
                  }, 1000);
                  break;
              }
            } else if("RIGHT" === strLocation) {
              switch (this.operTypeR) {
                case "SOE":
                  this.$nextTick(this.$refs.iSoE.resize);
                  break;
              }
            }
          };
          this.GetScrolltable = function() {
            switch (this.operTypeL) {
              case "YX_2":
                return this.$refs.iTeleSig;
                break;
              case "YC":
                return this.$refs.iTeleMeter;
                break;
              case "YC_2":
                return this.$refs.iTeleMeterAngle;
                break;
            }
          };

          this.getIndexByPid = function(iPid, lstData) {
            for(var index = 0; index < lstData.length; ++index) {
              if(iPid.toString() === lstData[index].pid.toString()) {
                return index;
              }
            }
            return -1;
          };

          this.PidSearch = function(strPid) {
            if(0 !== this.$refs.iinput_search_pid.currentValue.length ||
              'undefined' !== typeof(strPid)) {
              this.conds_pid = ('undefined' !== typeof(strPid)) ? Number(strPid) : Number(this.$refs.iinput_search_pid.currentValue);
              if(isNaN(this.conds_pid)) {
                this.$refs.iinput_search_pid.currentValue = "";
                this.conds_pid = -1;
                return;
              }

              var sTable = this.GetScrolltable();

              var dataPos = this.getIndexByPid(this.conds_pid, sTable.data);
              if(0 > dataPos) {
                this.conds_pid = -1;
                this.$refs.iinput_search_pid.currentValue = "";
                return;
              }
              this.$refs.iinput_search_desc.currentValue = "";
              this.conds_desc = "####";
              sTable.divScroll.scrollTop(dataPos * 50);
            }
          };

          this.SearchInit = function() {
            this.conds_temp_desc = this.$refs.iinput_search_desc.currentValue;
            this.conds_temp_pid = this.$refs.iinput_search_pid.currentValue;
            if("####" == this.conds_desc)
              this.$refs.iinput_search_desc.currentValue = "";
            if(-1 == this.conds_pid)
              this.$refs.iinput_search_pid.currentValue = "";
          };

          //记录需要闪烁告警的点号，与对应颜色
          this.WarningList_YX = [];

          this.ClearWarningList = function() {
            this.WarningList_YX = [];
            this.WarningList_YX.length = 0;
            this.SetTeleSigDisplayClass(this.$refs.iTeleSig, this.LST_CLASS_COLS);
          };

          //获得同点号  同通道的信号的显示颜色
          this.GetWarningColor = function(lstData, strPid, sys) {
            var color = '';
            var current = '';
            for(var i = 0; i < lstData.length; ++i) {
              if(lstData[i].pid.toString() === strPid && lstData[i].sys.toString() == sys) {
                if('' === color) {
                  //记录首个符合的信号的状态
                  switch (lstData[i].current.toString()) {
                    case '0':
                      color = 'cell-twinkle-green';
                      break;
                    case '1':
                      color = 'cell-twinkle-red';
                      break;
                    default:
                      color = '';
                      break;
                  }
                  current = lstData[i].current.toString();
                } else if(current !== lstData[i].current.toString()) {
                  color = 'cell-twinkle-yellow';
                  break;
                }
              }
            }
            return color;
          };

          this.GetColor = function(data, strPid, strChannel) {
            switch (data.current.toString()) {
              case '0':
                return pdp.TWINKLE_GREEN;
              case '1':
                return pdp.TWINKLE_RED;
              default:
                return '';
            }
          }

          this.dsCompare = function(d1, d2) {
            if(d1.pid !== d2.pid) {
              return (Number(d1.pid) > Number(d2.pid) ? 1 : -1);
            } else if(d1.channel !== d2.channel) {
              return (Number(d1.channel) > Number(d2.channel) ? 1 : -1);
            }
            return 0;
          };
          //记录遥信表的合并列
          this.mergeColsYX = [];
          //给遥信表的‘收到’列添加双击事件  切换接受时间优先模式
          this.SetPriority_YX = function(tp) {
            //时间优先
            if('TIME' === tp) {
              pdp.mergeColsYX = pdp.$refs.iTeleSig.mergeCols;
              pdp.$refs.iTeleSig.mergeCols = [];
              MAINSTATION_TIME_FIRST_YX = true;
            }
            //点号优先
            else if('PID' === tp) {
              pdp.$refs.iTeleSig.data.sort(pdp.dsCompare);
              pdp.$refs.iTeleSig.mergeCols = pdp.mergeColsYX;
              pdp.mergeColsYX = [];
              MAINSTATION_TIME_FIRST_YX = false;
            }
            //重绘
            pdp.ClearWarningList();
            pdp.$refs.iTeleSig.resize();
          };

          this.GetCellClass = function(f1, f2) {
            if('undefined' === typeof(f2)) {
              switch (f1) {
                case '0':
                  return "cell-twinkle-green";
                case '1':
                  return "cell-twinkle-red";
                case '2':
                  return "cell-twinkle-yellow";
                case '3':
                  return "cell-twinkle-gray";
              }
            }
            if(f1 === f2)
              return this.GetCellClass(f1);
            else
              return this.GetCellClass('2');
          };

          this.SetTeleSigDisplayClass = function(sTable, lstClassCol) {
            if('undefined' === typeof(sTable.data.length) || 0 === sTable.data.length)
              return;
            let iLen = 1;
            let colClass = '';
            for(let i = 1; i < sTable.data.length; ++i) {
              if(sTable.data[i - 1].pid.toString() === sTable.data[i].pid.toString() &&
                sTable.data[i - 1].channel.toString() === sTable.data[i].channel.toString() &&
                sTable.data[i - 1].sys.toString() === sTable.data[i].sys.toString()) {
                if('' === colClass) {
                  colClass = this.GetCellClass(sTable.data[i - 1].current.toString(), sTable.data[i].current.toString());
                } else if('cell-twinkle-yellow' !== colClass) {
                  colClass = this.GetCellClass(colClass, sTable.data[i].current.toString());
                }
                ++iLen;
              } else {
                if('' === colClass) {
                  colClass = this.GetCellClass(sTable.data[i - 1].current.toString());
                }
                for(let j = 0; j < iLen; ++j) {
                  if(sTable.data[i - (j + 1)]['cellClassName'] == undefined)
                    sTable.data[i - (j + 1)]['cellClassName'] = {};
                  lstClassCol.forEach(col => {
                    sTable.data[i - (j + 1)]['cellClassName'][col] = colClass;
                  });
                  if(sTable.data[i - (j + 1)]["sys"] == 'd5000' && this.objMerge.hasOwnProperty(sTable.data[i - (j + 1)]["sigContent"])) {
                    var list = this.objMerge[sTable.data[i - (j + 1)]["sigContent"]];
                    for(var y = 0; y < list.length; y++) {
                      if(sTable.data[list[y]]['cellClassName'] == undefined) {
                        sTable.data[list[y]]['cellClassName'] = {};
                      }
                      sTable.data[list[y]]['cellClassName']["mergeName"] = colClass;
                    }
                  }
                }
                colClass = '';
                iLen = 1;
              }
            }
            let i = sTable.data.length;
            if('undefined' !== typeof(sTable.data[i - 1]['cellClassName'])) {
              return;
            }
            if('' === colClass) {
              colClass = this.GetCellClass(sTable.data[i - 1].current.toString());
            }
            for(let j = 0; j < iLen; ++j) {
              if(sTable.data[i - (j + 1)]['cellClassName'] == undefined)
                sTable.data[i - (j + 1)]['cellClassName'] = {};
              lstClassCol.forEach(col => {
                sTable.data[i - (j + 1)]['cellClassName'][col] = colClass;
              });
              if(sTable.data[i - (j + 1)]["sys"] == 'd5000' && this.objMerge.hasOwnProperty(sTable.data[i - (j + 1)]["sigContent"])) {
                var list = this.objMerge[sTable.data[i - (j + 1)]["sigContent"]];
                for(var y = 0; y < list.length; y++) {
                  if(sTable.data[list[y]]['cellClassName'] == undefined)
                    sTable.data[list[y]]['cellClassName'] = {};
                  sTable.data[list[y]]['cellClassName']["mergeName"] = colClass;
                }
              }
            }
            sTable.resize();
          };

          this.$refs.iSoE.fSetTr = function(rows) {
            if('undefined' === typeof(rows))
              return;
            for(var i = 0; i < rows.length; ++i) {
              rows[i].bgColor = pdp.selectPid === rows[i].cells[1].innerText ? '#d8ecef' : '#fff';
            }
          }

          //设置闪烁
          this.CountColor = 0;
          this.SetColorMark = setInterval(function() {
            if('undefined' === typeof(pdp.WarningList_YX) || 0 === pdp.WarningList_YX.length)
              return;
            var bShowGray = 0 === pdp.CountColor++;
            var data = pdp.$refs.iTeleSig.data;

            for(var i = 0; i < data.length; ++i) {
              //需闪烁
              if('undefined' !== typeof(pdp.WarningList_YX['pid_' + data[i].pid.toString() + '_' + data[i].sys.toString()])) {
                let colClass = bShowGray ? pdp.GetCellClass('3') : pdp.WarningList_YX['pid_' + data[i].pid.toString() + '_' + data[i].sys.toString()];
                pdp.LST_CLASS_COLS.forEach(col => {
                  if('undefined' === typeof(pdp.$refs.iTeleSig.data[i]['cellClassName']))
                    pdp.$refs.iTeleSig.data[i]['cellClassName'] = {};
                  pdp.$refs.iTeleSig.data[i]['cellClassName'][col] = colClass;
                });
                if(data[i]["sys"] == 'd5000' && pdp.objMerge.hasOwnProperty(data[i]["sigContent"])) {
                  var list = pdp.objMerge[data[i]["sigContent"]];
                  for(var y = 0; y < list.length; y++) {
                    if(pdp.$refs.iTeleSig.data[list[y]]['cellClassName'] == undefined) {
                      pdp.$refs.iTeleSig.data[list[y]]['cellClassName'] = {};
                    }
                    pdp.$refs.iTeleSig.data[list[y]]['cellClassName']["mergeName"] = colClass;
                  }
                }
              }
            }
            pdp.CountColor = pdp.CountColor % 2;
            pdp.$nextTick(function() {
              pdp.$refs.iTeleSig.resize();
            });
          }, 1000);
          this.select_ds_YX();
          this.getMergeSigInfo();
          this.$nextTick(function() {
            vm.SetTeleSigDisplayClass(vm.$refs.iTeleSig, this.LST_CLASS_COLS);
          });
          this.select_ds_YC();
          setTimeout(function() {
            vm.SetRowid(vm.$refs.iTeleMeter.data);
          }, 1000);
          this.select_ds_YC_PQ();
          setTimeout(function() {
            vm.SetRowid(vm.$refs.iTeleMeterAngle.data);
          }, 1000);
          this.Reload1 = function() {
            var type = "" == this.s_YX ? "YX_2" : ("" == this.s_YC ? "YC" : "YC_2");
            switch (type) {
              case "YX_2":
                vm.$refs.iTeleSig.resize();
                break;
              case "YC":
                vm.$refs.iTeleMeter.resize();
                break;
              case "YC_2":
                vm.$refs.iTeleMeterAngle.resize();
                break;
            }
            this.$nextTick(function() {
              var divS = this.GetScrolltable().divScroll;
              if(divS) {
                this.GetScrolltable().divScroll.scrollTop(0);
              }
            });
          }
          this.btn_YX_onclick();
          this.btn_SOE_onclick();
          this.LST_CLASS_COLS = ['pid', 'sys', 'sigContent'];
          this.SetTeleSigDisplayClass(this.$refs.iTeleSig, this.LST_CLASS_COLS);
        ]]>
      </list>
      <list type="script">
        <![CDATA[
          this.updateHandle_Key = this.ws.onMessage.add((function(e) {
          var od = JSON.parse(e.data);
          //主站消息
          if("SYSMESSAGE" === od.ObjName) {
            this.strSysMsg = od.Data.msg;
            return;
          }
          var data = od.Data;
          var sys = this.getSystemByIp(data.dst);
          switch (od.ObjName.toString().toUpperCase()) {
            case "TBTELESIG":
              //if(this.ds_acc_accepttime == "") return;    //若该任务卡未完成调试验收，则不显示信号
              if(!window.localStorage) {
                window.localStorage = {};
              }
              var cacheyx = window.localStorage;
              var key = this.mid + "_" + data.pid + "_" + sys.slice(0, 2) + "_yx";
              if(undefined != cacheyx.getItem(key) && "undefined" != cacheyx.getItem(key) && -1 != cacheyx.getItem(key)) {
                var pos = Number(cacheyx.getItem(key));
              } else {
                var pos = this.getIndexByPidChannel(data.pid, sys, this.$refs.iTeleSig.data);
                window.localStorage.setItem(key, pos);
              }
              if(pos >= 0) {
                var dataObj = this.$refs.iTeleSig.data[pos];
                //去除一秒内的重复数据
                try {
                  if(undefined != dataObj['current'] && undefined != data["rtime"] && !data.hasOwnProperty("finish")) {
                    var c1 = new Date(dataObj["rtime"]).getTime();
                    var c2 = new Date(data["rtime"]).getTime();
                    var diff = Math.abs(c1 - c2);

                    if(diff <= 1000 &&
                      dataObj['current'] + "" == data['current'] + "") {
                      return;
                    }
                  }
                } catch (e) {
                  console.log(e.Message)
                }
                for(var key in data) {
                  if('current' == key) {
                    if(!data.hasOwnProperty("finish")) {
                      dataObj['current2'] = dataObj['current1'];
                      dataObj['current1'] = dataObj['current'];
                    }
                  }
                  if('channel' == key) {
                    dataObj[key] = 1;
                  } else {
                    if(!(data.hasOwnProperty("finish") && 'current' == key)) {
                      dataObj[key] = data[key];
                    }
                  }
                }
                if(true === MAINSTATION_TIME_FIRST_YX) {
                  this.$refs.iTeleSig.data.splice(pos, 1);
                  this.$refs.iTeleSig.data.unshift(dataObj);
                }

                //获得应该显示的颜色
                var color = this.GetWarningColor(this.$refs.iTeleSig.data, dataObj.pid.toString(), sys);
                //将需闪烁的信息  存入WarningList_YX
                this.WarningList_YX.length += ('undefined' !== typeof(this.WarningList_YX['pid_' + dataObj.pid + '_' + dataObj.sys])) ? 0 : 1;
                this.WarningList_YX['pid_' + dataObj.pid + '_' + dataObj.sys] = color;
                //与上一个信号的验收时间对比，若超过一个小时则重置任务计划状态
                if(pos != 0) {
                  this.CheckInterval(pos);
                }
                this.$refs.iTeleSig.resize();
                this.statisticsInfo = PDP.read('ConnMain','SignalData:GetYxStatisticsInfo',[this.mid]).value;
              }
              break;
            case "TBTELEMETER":
              if(!window.localStorage) {
                window.localStorage = {};
              }
              var cacheyc = window.localStorage;
              var key = this.mid + "_" + data.pid + "_" + sys.slice(0, 2);
              if(undefined != cacheyc.getItem(key + "_yc") &&
                "undefined" != cacheyc.getItem(key + "_yc") &&
                "-1" != cacheyc.getItem(key + "_yc")) {
                var pos = Number(cacheyc.getItem(key + "_yc"));
              } else {
                var pos = this.getIndexByPidChannel(data.pid, sys, this.$refs.iTeleMeter.data);
                if(pos >= 0)
                  window.localStorage.setItem(key + "_yc", pos);
              }
              if(undefined != cacheyc.getItem(key + "_ycpq") &&
                "undefined" != cacheyc.getItem(key + "_ycpq") &&
                "-1" != cacheyc.getItem(key + "_ycpq")) {
                var pos2 = Number(cacheyc.getItem(key + "_ycpq"));
              } else {
                var pos2 = this.getIndexByPidChannel(data.pid, sys, this.$refs.iTeleMeterAngle.data);
                if(pos2 >= 0)
                  window.localStorage.setItem(key + "_ycpq", pos2);
              }
              var tbdata = this.$refs.iTeleMeter.data;
              var flag = false;
              if(pos2 >= 0) { //遥测有功无功表有该信号,理论上信号不会同时属于两个表格
                pos = pos2;
                tbdata = this.$refs.iTeleMeterAngle.data;
                flag = true;
              }
              var dataObj = tbdata[pos];

              if(!pdp.chooseYc.includes(pos))
                pos = -1;
              if(pos >= 0) {
                //去除一秒内的重复数据
                try {
                  if(undefined != dataObj['value'] && undefined != data["rtime"]) {
                    var c1 = new Date(dataObj["rtime"]).getTime();
                    var c2 = new Date(data["rtime"]).getTime();
                    var diff = Math.abs(c1 - c2);

                    if(diff <= 1000 && dataObj['value'] + "" == data['value'] + "") {
                      return;
                    }
                  }
                } catch (e) {}
                if(false == this.FOCUS_ON_YC_INPUT) {
                  if(!tbdata[pos].Atime.length){
                    for(var key in data) {
                      if('channel' === key) {
                        dataObj[key] = 1;
                      } else if('current' != key) { //设定值不显示实时数据的设定值
                        dataObj[key] = data[key];
                      }
                    }
                    if(pos2 >= 0){
                      vm.$set(vm.ds_YC_PQ[pos],6,data.rtime);
                    }else{
                      vm.$set(vm.ds_YC[pos],5,data.rtime);
                    }
                    if(pos2<0){
                      vm.getYcValue(dataObj,pos);
                      vm.getYcError(dataObj,pos);
                    }else{
                      vm.getYc2Value(dataObj,pos);
                      vm.getYc2Error(dataObj,pos);
                    }
                  }
                  
                  if(true === MAINSTATION_TIME_FIRST_YC) {
                    tbdata.splice(pos, 1);
                    tbdata.unshift(dataObj);
                  }
                } else {
                  if(pos2 < 0) { //如果是遥测角度转换的信号则不缓存
                    Main_Yc_Buffer[pos] = JSON.parse(JSON.stringify(dataObj));
                    for(var key in data) {
                      Main_Yc_Buffer[pos][key] = data[key];
                    }
                  }
                }
              }
              if(flag) {
                //遥测(角度转换)数据有6条，更新剩下5条
                var num = 0;
                for(var z = 1; z <= 12; z++) { //可能为双系统
                  if(num < 5 && pos + z < tbdata.length) { //更新完5条或者超出表格数据长度就不执行
                    var nextObj = tbdata[pos + z];
                    if(nextObj["pid"] == dataObj["pid"] && nextObj["sys"] == dataObj["sys"] && !nextObj["Atime"].length) {
                      for(var key in data) {
                        if('channel' === key) {
                          nextObj[key] = 1;
                        } else if('current' != key) { //设定值不显示实时数据的设定值
                          nextObj[key] = data[key];
                        }
                      }
                      num++;
                      vm.$set(vm.ds_YC_PQ[pos + z],6,data.rtime)
                      vm.getYc2Value(nextObj,pos + z);
                      vm.getYc2Error(nextObj,pos + z);
                    }
                  } else break;
                }
                this.$refs.iTeleMeterAngle.resize();
              } else {
                if(false == this.FOCUS_ON_YC_INPUT)
                  this.$refs.iTeleMeter.resize();
              }
              break;
            case "TBSOELOG":
              var limit = 200;
              var arrDs = this.$refs.iSoE.data;
              if(limit < arrDs.length) {
                arrDs.splice(limit, arrDs.length - limit);
              }
              if('undefined' === typeof(data.time) || null === data.time ||
                0 === data.time.toString().length) {
                //soe报文时标不为空
                if(this.$refs.iCheckBox_Soe.currentValue) {
                  break;
                } else {
                  data.time = '无时标';
                }
              }
              arrDs.unshift(data);
              this.$refs.iSoE.resize();
              break;
          }

        }).bind(this));
      $(window).bind('beforeunload', function() {
          this.ws.onMessage.remove(this.updateHandle_Key);
        }.bind(this));
        ]]>
      </list>
    </script>
  </scripts>
</root>